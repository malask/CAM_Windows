// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _preprocessor_cam52_HH_
#define _preprocessor_cam52_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct preprocessor_cam52 : public sc_module {
    // Port declarations 49
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<10> > tree_V_address0;
    sc_out< sc_logic > tree_V_ce0;
    sc_in< sc_lv<24> > tree_V_q0;
    sc_out< sc_lv<10> > tree_V_address1;
    sc_out< sc_logic > tree_V_ce1;
    sc_in< sc_lv<24> > tree_V_q1;
    sc_in< sc_lv<11> > nodo_V_dout;
    sc_in< sc_logic > nodo_V_empty_n;
    sc_out< sc_logic > nodo_V_read;
    sc_in< sc_lv<1> > fatherSearch_dout;
    sc_in< sc_logic > fatherSearch_empty_n;
    sc_out< sc_logic > fatherSearch_read;
    sc_in< sc_lv<2> > relationship_V_dout;
    sc_in< sc_logic > relationship_V_empty_n;
    sc_out< sc_logic > relationship_V_read;
    sc_out< sc_lv<11> > nodo_V_out_din;
    sc_in< sc_logic > nodo_V_out_full_n;
    sc_out< sc_logic > nodo_V_out_write;
    sc_out< sc_lv<11> > nodo_V_out1_din;
    sc_in< sc_logic > nodo_V_out1_full_n;
    sc_out< sc_logic > nodo_V_out1_write;
    sc_out< sc_lv<1> > fatherSearch_out_din;
    sc_in< sc_logic > fatherSearch_out_full_n;
    sc_out< sc_logic > fatherSearch_out_write;
    sc_out< sc_lv<1> > fatherSearch_out2_din;
    sc_in< sc_logic > fatherSearch_out2_full_n;
    sc_out< sc_logic > fatherSearch_out2_write;
    sc_out< sc_lv<2> > relationship_V_out_din;
    sc_in< sc_logic > relationship_V_out_full_n;
    sc_out< sc_logic > relationship_V_out_write;
    sc_out< sc_lv<2> > relationship_V_out3_din;
    sc_in< sc_logic > relationship_V_out3_full_n;
    sc_out< sc_logic > relationship_V_out3_write;
    sc_out< sc_lv<24> > in1_V_V_din;
    sc_in< sc_logic > in1_V_V_full_n;
    sc_out< sc_logic > in1_V_V_write;
    sc_out< sc_lv<24> > in2_V_V_din;
    sc_in< sc_logic > in2_V_V_full_n;
    sc_out< sc_logic > in2_V_V_write;


    // Module declarations
    preprocessor_cam52(sc_module_name name);
    SC_HAS_PROCESS(preprocessor_cam52);

    ~preprocessor_cam52();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > nodo_V_blk_n;
    sc_signal< sc_logic > fatherSearch_blk_n;
    sc_signal< sc_logic > relationship_V_blk_n;
    sc_signal< sc_logic > nodo_V_out_blk_n;
    sc_signal< sc_logic > nodo_V_out1_blk_n;
    sc_signal< sc_logic > fatherSearch_out_blk_n;
    sc_signal< sc_logic > fatherSearch_out2_blk_n;
    sc_signal< sc_logic > relationship_V_out_blk_n;
    sc_signal< sc_logic > relationship_V_out3_blk_n;
    sc_signal< sc_logic > in1_V_V_blk_n;
    sc_signal< sc_lv<1> > and_ln30_fu_212_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_reg_256;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > and_ln30_reg_252;
    sc_signal< sc_logic > in2_V_V_blk_n;
    sc_signal< sc_lv<11> > i_0_i_i_i_i_reg_195;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > tmp_fu_218_p3;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > i_fu_246_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<64> > zext_ln36_fu_230_p1;
    sc_signal< sc_lv<64> > zext_ln37_fu_241_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<1> > icmp_ln30_fu_206_p2;
    sc_signal< sc_lv<10> > trunc_ln34_fu_226_p1;
    sc_signal< sc_lv<10> > or_ln37_fu_235_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<24> ap_const_lv24_401;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln30_fu_212_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_fatherSearch_blk_n();
    void thread_fatherSearch_out2_blk_n();
    void thread_fatherSearch_out2_din();
    void thread_fatherSearch_out2_write();
    void thread_fatherSearch_out_blk_n();
    void thread_fatherSearch_out_din();
    void thread_fatherSearch_out_write();
    void thread_fatherSearch_read();
    void thread_i_fu_246_p2();
    void thread_icmp_ln30_fu_206_p2();
    void thread_in1_V_V_blk_n();
    void thread_in1_V_V_din();
    void thread_in1_V_V_write();
    void thread_in2_V_V_blk_n();
    void thread_in2_V_V_din();
    void thread_in2_V_V_write();
    void thread_internal_ap_ready();
    void thread_nodo_V_blk_n();
    void thread_nodo_V_out1_blk_n();
    void thread_nodo_V_out1_din();
    void thread_nodo_V_out1_write();
    void thread_nodo_V_out_blk_n();
    void thread_nodo_V_out_din();
    void thread_nodo_V_out_write();
    void thread_nodo_V_read();
    void thread_or_ln37_fu_235_p2();
    void thread_real_start();
    void thread_relationship_V_blk_n();
    void thread_relationship_V_out3_blk_n();
    void thread_relationship_V_out3_din();
    void thread_relationship_V_out3_write();
    void thread_relationship_V_out_blk_n();
    void thread_relationship_V_out_din();
    void thread_relationship_V_out_write();
    void thread_relationship_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_fu_218_p3();
    void thread_tree_V_address0();
    void thread_tree_V_address1();
    void thread_tree_V_ce0();
    void thread_tree_V_ce1();
    void thread_trunc_ln34_fu_226_p1();
    void thread_zext_ln36_fu_230_p1();
    void thread_zext_ln37_fu_241_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
