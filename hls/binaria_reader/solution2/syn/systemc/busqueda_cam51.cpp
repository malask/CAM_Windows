// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "busqueda_cam51.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic busqueda_cam51::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic busqueda_cam51::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> busqueda_cam51::ap_ST_fsm_state1 = "1";
const sc_lv<4> busqueda_cam51::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> busqueda_cam51::ap_ST_fsm_state4 = "100";
const sc_lv<4> busqueda_cam51::ap_ST_fsm_pp1_stage0 = "1000";
const bool busqueda_cam51::ap_const_boolean_1 = true;
const sc_lv<32> busqueda_cam51::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> busqueda_cam51::ap_const_lv32_3 = "11";
const bool busqueda_cam51::ap_const_boolean_0 = false;
const sc_lv<1> busqueda_cam51::ap_const_lv1_1 = "1";
const sc_lv<1> busqueda_cam51::ap_const_lv1_0 = "0";
const sc_lv<32> busqueda_cam51::ap_const_lv32_1 = "1";
const sc_lv<32> busqueda_cam51::ap_const_lv32_2 = "10";
const sc_lv<11> busqueda_cam51::ap_const_lv11_401 = "10000000001";
const sc_lv<24> busqueda_cam51::ap_const_lv24_401 = "10000000001";
const sc_lv<32> busqueda_cam51::ap_const_lv32_D = "1101";
const sc_lv<32> busqueda_cam51::ap_const_lv32_17 = "10111";
const sc_lv<32> busqueda_cam51::ap_const_lv32_C = "1100";

busqueda_cam51::busqueda_cam51(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln61_fu_172_p2);
    sensitive << ( icmp_ln879_3_fu_162_p2 );
    sensitive << ( icmp_ln879_4_fu_167_p2 );

    SC_METHOD(thread_and_ln77_fu_152_p2);
    sensitive << ( icmp_ln879_5_fu_142_p2 );
    sensitive << ( icmp_ln879_6_fu_147_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op65_write_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op65_write_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_predicate_op65_write_state6 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_predicate_op65_write_state6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_predicate_op37_write_state3);
    sensitive << ( empty_n_2_reg_194 );
    sensitive << ( icmp_ln879_2_reg_198 );
    sensitive << ( and_ln77_reg_202 );

    SC_METHOD(thread_ap_predicate_op65_write_state6);
    sensitive << ( empty_n_reg_211 );
    sensitive << ( icmp_ln879_reg_215 );
    sensitive << ( and_ln61_reg_219 );

    SC_METHOD(thread_ap_predicate_tran3to4_state2);
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( grp_nbread_fu_80_p2_0 );

    SC_METHOD(thread_ap_predicate_tran6to4_state5);
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( grp_nbread_fu_80_p2_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_compare_node_V_fu_128_p4);
    sensitive << ( in1_V_V_dout );

    SC_METHOD(thread_fatherSearch_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_fatherSearch_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_fatherSearch_read_read_fu_74_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_dout );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_grp_fu_102_p2);
    sensitive << ( in1_V_V_dout );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( grp_nbread_fu_80_p2_0 );

    SC_METHOD(thread_grp_fu_108_p4);
    sensitive << ( in1_V_V_dout );

    SC_METHOD(thread_grp_nbread_fu_80_p2_0);
    sensitive << ( in1_V_V_empty_n );

    SC_METHOD(thread_icmp_ln879_3_fu_162_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( nodo_V_read_reg_178 );
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( grp_nbread_fu_80_p2_0 );
    sensitive << ( compare_node_V_fu_128_p4 );

    SC_METHOD(thread_icmp_ln879_4_fu_167_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( relationship_V_read_reg_184 );
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( grp_nbread_fu_80_p2_0 );
    sensitive << ( node_relation_V_fu_158_p1 );

    SC_METHOD(thread_icmp_ln879_5_fu_142_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( nodo_V_read_reg_178 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( grp_fu_108_p4 );
    sensitive << ( grp_nbread_fu_80_p2_0 );

    SC_METHOD(thread_icmp_ln879_6_fu_147_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( relationship_V_read_reg_184 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( grp_fu_102_p2 );
    sensitive << ( grp_nbread_fu_80_p2_0 );
    sensitive << ( node_relation_V_1_fu_138_p1 );

    SC_METHOD(thread_in1_V_V_read);
    sensitive << ( in1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in1b_V_V_blk_n);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( empty_n_reg_211 );
    sensitive << ( icmp_ln879_reg_215 );
    sensitive << ( and_ln61_reg_219 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( empty_n_2_reg_194 );
    sensitive << ( icmp_ln879_2_reg_198 );
    sensitive << ( and_ln77_reg_202 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_in1b_V_V_din);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op37_write_state3 );
    sensitive << ( tmp_V_3_reg_206 );
    sensitive << ( ap_predicate_op65_write_state6 );
    sensitive << ( tmp_V_reg_223 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_in1b_V_V_write);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_predicate_op37_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_predicate_op65_write_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_node_relation_V_1_fu_138_p1);
    sensitive << ( in1_V_V_dout );

    SC_METHOD(thread_node_relation_V_fu_158_p1);
    sensitive << ( in1_V_V_dout );

    SC_METHOD(thread_nodo_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );

    SC_METHOD(thread_nodo_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_relationship_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( relationship_V_empty_n );

    SC_METHOD(thread_relationship_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( in1b_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( fatherSearch_read_read_fu_74_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "busqueda_cam51_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, nodo_V_dout, "(port)nodo_V_dout");
    sc_trace(mVcdFile, nodo_V_empty_n, "(port)nodo_V_empty_n");
    sc_trace(mVcdFile, nodo_V_read, "(port)nodo_V_read");
    sc_trace(mVcdFile, relationship_V_dout, "(port)relationship_V_dout");
    sc_trace(mVcdFile, relationship_V_empty_n, "(port)relationship_V_empty_n");
    sc_trace(mVcdFile, relationship_V_read, "(port)relationship_V_read");
    sc_trace(mVcdFile, fatherSearch_dout, "(port)fatherSearch_dout");
    sc_trace(mVcdFile, fatherSearch_empty_n, "(port)fatherSearch_empty_n");
    sc_trace(mVcdFile, fatherSearch_read, "(port)fatherSearch_read");
    sc_trace(mVcdFile, in1_V_V_dout, "(port)in1_V_V_dout");
    sc_trace(mVcdFile, in1_V_V_empty_n, "(port)in1_V_V_empty_n");
    sc_trace(mVcdFile, in1_V_V_read, "(port)in1_V_V_read");
    sc_trace(mVcdFile, in1b_V_V_din, "(port)in1b_V_V_din");
    sc_trace(mVcdFile, in1b_V_V_full_n, "(port)in1b_V_V_full_n");
    sc_trace(mVcdFile, in1b_V_V_write, "(port)in1b_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, nodo_V_blk_n, "nodo_V_blk_n");
    sc_trace(mVcdFile, relationship_V_blk_n, "relationship_V_blk_n");
    sc_trace(mVcdFile, fatherSearch_blk_n, "fatherSearch_blk_n");
    sc_trace(mVcdFile, in1b_V_V_blk_n, "in1b_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, empty_n_reg_211, "empty_n_reg_211");
    sc_trace(mVcdFile, icmp_ln879_reg_215, "icmp_ln879_reg_215");
    sc_trace(mVcdFile, and_ln61_reg_219, "and_ln61_reg_219");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, empty_n_2_reg_194, "empty_n_2_reg_194");
    sc_trace(mVcdFile, icmp_ln879_2_reg_198, "icmp_ln879_2_reg_198");
    sc_trace(mVcdFile, and_ln77_reg_202, "and_ln77_reg_202");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, nodo_V_read_reg_178, "nodo_V_read_reg_178");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, relationship_V_read_reg_184, "relationship_V_read_reg_184");
    sc_trace(mVcdFile, fatherSearch_read_read_fu_74_p2, "fatherSearch_read_read_fu_74_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op37_write_state3, "ap_predicate_op37_write_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, grp_fu_102_p2, "grp_fu_102_p2");
    sc_trace(mVcdFile, and_ln77_fu_152_p2, "and_ln77_fu_152_p2");
    sc_trace(mVcdFile, tmp_V_3_reg_206, "tmp_V_3_reg_206");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op65_write_state6, "ap_predicate_op65_write_state6");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, and_ln61_fu_172_p2, "and_ln61_fu_172_p2");
    sc_trace(mVcdFile, grp_fu_108_p4, "grp_fu_108_p4");
    sc_trace(mVcdFile, tmp_V_reg_223, "tmp_V_reg_223");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_predicate_tran3to4_state2, "ap_predicate_tran3to4_state2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_predicate_tran6to4_state5, "ap_predicate_tran6to4_state5");
    sc_trace(mVcdFile, grp_nbread_fu_80_p2_0, "grp_nbread_fu_80_p2_0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, node_relation_V_1_fu_138_p1, "node_relation_V_1_fu_138_p1");
    sc_trace(mVcdFile, icmp_ln879_5_fu_142_p2, "icmp_ln879_5_fu_142_p2");
    sc_trace(mVcdFile, icmp_ln879_6_fu_147_p2, "icmp_ln879_6_fu_147_p2");
    sc_trace(mVcdFile, compare_node_V_fu_128_p4, "compare_node_V_fu_128_p4");
    sc_trace(mVcdFile, node_relation_V_fu_158_p1, "node_relation_V_fu_158_p1");
    sc_trace(mVcdFile, icmp_ln879_3_fu_162_p2, "icmp_ln879_3_fu_162_p2");
    sc_trace(mVcdFile, icmp_ln879_4_fu_167_p2, "icmp_ln879_4_fu_167_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

busqueda_cam51::~busqueda_cam51() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void busqueda_cam51::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran3to4_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_74_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_74_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran6to4_state5.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_74_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_74_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_102_p2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln61_reg_219 = and_ln61_fu_172_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_102_p2.read()))) {
        and_ln77_reg_202 = and_ln77_fu_152_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        empty_n_2_reg_194 = grp_nbread_fu_80_p2_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        empty_n_reg_211 = grp_nbread_fu_80_p2_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()))) {
        icmp_ln879_2_reg_198 = grp_fu_102_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln879_reg_215 = grp_fu_102_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        nodo_V_read_reg_178 = nodo_V_dout.read();
        relationship_V_read_reg_184 = relationship_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_102_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln77_fu_152_p2.read()))) {
        tmp_V_3_reg_206 = in1_V_V_dout.read().range(12, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_102_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln61_fu_172_p2.read()))) {
        tmp_V_reg_223 = in1_V_V_dout.read().range(23, 13);
    }
}

void busqueda_cam51::thread_and_ln61_fu_172_p2() {
    and_ln61_fu_172_p2 = (icmp_ln879_3_fu_162_p2.read() & icmp_ln879_4_fu_167_p2.read());
}

void busqueda_cam51::thread_and_ln77_fu_152_p2() {
    and_ln77_fu_152_p2 = (icmp_ln879_5_fu_142_p2.read() & icmp_ln879_6_fu_147_p2.read());
}

void busqueda_cam51::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void busqueda_cam51::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void busqueda_cam51::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void busqueda_cam51::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void busqueda_cam51::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam51::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()));
}

void busqueda_cam51::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()));
}

void busqueda_cam51::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()));
}

void busqueda_cam51::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam51::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()));
}

void busqueda_cam51::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()));
}

void busqueda_cam51::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()));
}

void busqueda_cam51::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read()));
}

void busqueda_cam51::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam51::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()));
}

void busqueda_cam51::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam51::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, in1b_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()));
}

void busqueda_cam51::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void busqueda_cam51::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void busqueda_cam51::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void busqueda_cam51::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_ap_predicate_op37_write_state3() {
    ap_predicate_op37_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, empty_n_2_reg_194.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_reg_198.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln77_reg_202.read()));
}

void busqueda_cam51::thread_ap_predicate_op65_write_state6() {
    ap_predicate_op65_write_state6 = (esl_seteq<1,1,1>(empty_n_reg_211.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln879_reg_215.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln61_reg_219.read()));
}

void busqueda_cam51::thread_ap_predicate_tran3to4_state2() {
    ap_predicate_tran3to4_state2 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_102_p2.read()));
}

void busqueda_cam51::thread_ap_predicate_tran6to4_state5() {
    ap_predicate_tran6to4_state5 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbread_fu_80_p2_0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_102_p2.read()));
}

void busqueda_cam51::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void busqueda_cam51::thread_compare_node_V_fu_128_p4() {
    compare_node_V_fu_128_p4 = in1_V_V_dout.read().range(12, 2);
}

void busqueda_cam51::thread_fatherSearch_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        fatherSearch_blk_n = fatherSearch_empty_n.read();
    } else {
        fatherSearch_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam51::thread_fatherSearch_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        fatherSearch_read = ap_const_logic_1;
    } else {
        fatherSearch_read = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_fatherSearch_read_read_fu_74_p2() {
    fatherSearch_read_read_fu_74_p2 = fatherSearch_dout.read();
}

void busqueda_cam51::thread_grp_fu_102_p2() {
    grp_fu_102_p2 = (!in1_V_V_dout.read().is_01() || !ap_const_lv24_401.is_01())? sc_lv<1>(): sc_lv<1>(in1_V_V_dout.read() == ap_const_lv24_401);
}

void busqueda_cam51::thread_grp_fu_108_p4() {
    grp_fu_108_p4 = in1_V_V_dout.read().range(23, 13);
}

void busqueda_cam51::thread_grp_nbread_fu_80_p2_0() {
    grp_nbread_fu_80_p2_0 =  (sc_lv<1>) ((in1_V_V_empty_n.read()));
}

void busqueda_cam51::thread_icmp_ln879_3_fu_162_p2() {
    icmp_ln879_3_fu_162_p2 = (!compare_node_V_fu_128_p4.read().is_01() || !nodo_V_read_reg_178.read().is_01())? sc_lv<1>(): sc_lv<1>(compare_node_V_fu_128_p4.read() == nodo_V_read_reg_178.read());
}

void busqueda_cam51::thread_icmp_ln879_4_fu_167_p2() {
    icmp_ln879_4_fu_167_p2 = (!node_relation_V_fu_158_p1.read().is_01() || !relationship_V_read_reg_184.read().is_01())? sc_lv<1>(): sc_lv<1>(node_relation_V_fu_158_p1.read() == relationship_V_read_reg_184.read());
}

void busqueda_cam51::thread_icmp_ln879_5_fu_142_p2() {
    icmp_ln879_5_fu_142_p2 = (!grp_fu_108_p4.read().is_01() || !nodo_V_read_reg_178.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_108_p4.read() == nodo_V_read_reg_178.read());
}

void busqueda_cam51::thread_icmp_ln879_6_fu_147_p2() {
    icmp_ln879_6_fu_147_p2 = (!node_relation_V_1_fu_138_p1.read().is_01() || !relationship_V_read_reg_184.read().is_01())? sc_lv<1>(): sc_lv<1>(node_relation_V_1_fu_138_p1.read() == relationship_V_read_reg_184.read());
}

void busqueda_cam51::thread_in1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in1_V_V_empty_n.read()) && 
         ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
           esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
           esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
          (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
           esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
           esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
           esl_seteq<1,1,1>(ap_const_logic_1, in1_V_V_empty_n.read()))))) {
        in1_V_V_read = ap_const_logic_1;
    } else {
        in1_V_V_read = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_in1b_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(empty_n_reg_211.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(icmp_ln879_reg_215.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln61_reg_219.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, empty_n_2_reg_194.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_reg_198.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln77_reg_202.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        in1b_V_V_blk_n = in1b_V_V_full_n.read();
    } else {
        in1b_V_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam51::thread_in1b_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
        in1b_V_V_din = tmp_V_reg_223.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1))) {
        in1b_V_V_din = ap_const_lv11_401;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        in1b_V_V_din = tmp_V_3_reg_206.read();
    } else {
        in1b_V_V_din = "XXXXXXXXXXX";
    }
}

void busqueda_cam51::thread_in1b_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_write_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        in1b_V_V_write = ap_const_logic_1;
    } else {
        in1b_V_V_write = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_node_relation_V_1_fu_138_p1() {
    node_relation_V_1_fu_138_p1 = in1_V_V_dout.read().range(2-1, 0);
}

void busqueda_cam51::thread_node_relation_V_fu_158_p1() {
    node_relation_V_fu_158_p1 = in1_V_V_dout.read().range(2-1, 0);
}

void busqueda_cam51::thread_nodo_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        nodo_V_blk_n = nodo_V_empty_n.read();
    } else {
        nodo_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam51::thread_nodo_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        nodo_V_read = ap_const_logic_1;
    } else {
        nodo_V_read = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void busqueda_cam51::thread_relationship_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        relationship_V_blk_n = relationship_V_empty_n.read();
    } else {
        relationship_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam51::thread_relationship_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        relationship_V_read = ap_const_logic_1;
    } else {
        relationship_V_read = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_start_out() {
    start_out = real_start.read();
}

void busqueda_cam51::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void busqueda_cam51::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_74_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_74_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(in1b_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

