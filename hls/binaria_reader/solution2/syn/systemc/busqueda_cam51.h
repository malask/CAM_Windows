// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _busqueda_cam51_HH_
#define _busqueda_cam51_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct busqueda_cam51 : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<11> > nodo_V_dout;
    sc_in< sc_logic > nodo_V_empty_n;
    sc_out< sc_logic > nodo_V_read;
    sc_in< sc_lv<2> > relationship_V_dout;
    sc_in< sc_logic > relationship_V_empty_n;
    sc_out< sc_logic > relationship_V_read;
    sc_in< sc_lv<1> > fatherSearch_dout;
    sc_in< sc_logic > fatherSearch_empty_n;
    sc_out< sc_logic > fatherSearch_read;
    sc_in< sc_lv<24> > in1_V_V_dout;
    sc_in< sc_logic > in1_V_V_empty_n;
    sc_out< sc_logic > in1_V_V_read;
    sc_out< sc_lv<11> > in1b_V_V_din;
    sc_in< sc_logic > in1b_V_V_full_n;
    sc_out< sc_logic > in1b_V_V_write;


    // Module declarations
    busqueda_cam51(sc_module_name name);
    SC_HAS_PROCESS(busqueda_cam51);

    ~busqueda_cam51();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > nodo_V_blk_n;
    sc_signal< sc_logic > relationship_V_blk_n;
    sc_signal< sc_logic > fatherSearch_blk_n;
    sc_signal< sc_logic > in1b_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > empty_n_reg_211;
    sc_signal< sc_lv<1> > icmp_ln879_reg_215;
    sc_signal< sc_lv<1> > and_ln61_reg_219;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > empty_n_2_reg_194;
    sc_signal< sc_lv<1> > icmp_ln879_2_reg_198;
    sc_signal< sc_lv<1> > and_ln77_reg_202;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > nodo_V_read_reg_178;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<2> > relationship_V_read_reg_184;
    sc_signal< sc_lv<1> > fatherSearch_read_read_fu_74_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op37_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > grp_fu_102_p2;
    sc_signal< sc_lv<1> > and_ln77_fu_152_p2;
    sc_signal< sc_lv<11> > tmp_V_3_reg_206;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_predicate_op65_write_state6;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > and_ln61_fu_172_p2;
    sc_signal< sc_lv<11> > grp_fu_108_p4;
    sc_signal< sc_lv<11> > tmp_V_reg_223;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_predicate_tran3to4_state2;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< bool > ap_predicate_tran6to4_state5;
    sc_signal< sc_lv<1> > grp_nbread_fu_80_p2_0;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<2> > node_relation_V_1_fu_138_p1;
    sc_signal< sc_lv<1> > icmp_ln879_5_fu_142_p2;
    sc_signal< sc_lv<1> > icmp_ln879_6_fu_147_p2;
    sc_signal< sc_lv<11> > compare_node_V_fu_128_p4;
    sc_signal< sc_lv<2> > node_relation_V_fu_158_p1;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_162_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_167_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<4> ap_ST_fsm_pp1_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_401;
    static const sc_lv<24> ap_const_lv24_401;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_C;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln61_fu_172_p2();
    void thread_and_ln77_fu_152_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_predicate_op37_write_state3();
    void thread_ap_predicate_op65_write_state6();
    void thread_ap_predicate_tran3to4_state2();
    void thread_ap_predicate_tran6to4_state5();
    void thread_ap_ready();
    void thread_compare_node_V_fu_128_p4();
    void thread_fatherSearch_blk_n();
    void thread_fatherSearch_read();
    void thread_fatherSearch_read_read_fu_74_p2();
    void thread_grp_fu_102_p2();
    void thread_grp_fu_108_p4();
    void thread_grp_nbread_fu_80_p2_0();
    void thread_icmp_ln879_3_fu_162_p2();
    void thread_icmp_ln879_4_fu_167_p2();
    void thread_icmp_ln879_5_fu_142_p2();
    void thread_icmp_ln879_6_fu_147_p2();
    void thread_in1_V_V_read();
    void thread_in1b_V_V_blk_n();
    void thread_in1b_V_V_din();
    void thread_in1b_V_V_write();
    void thread_internal_ap_ready();
    void thread_node_relation_V_1_fu_138_p1();
    void thread_node_relation_V_fu_158_p1();
    void thread_nodo_V_blk_n();
    void thread_nodo_V_read();
    void thread_real_start();
    void thread_relationship_V_blk_n();
    void thread_relationship_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
