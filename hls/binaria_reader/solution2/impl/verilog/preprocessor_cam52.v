// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module preprocessor_cam52 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        tree_V_address0,
        tree_V_ce0,
        tree_V_q0,
        tree_V_address1,
        tree_V_ce1,
        tree_V_q1,
        nodo_V_dout,
        nodo_V_empty_n,
        nodo_V_read,
        fatherSearch_dout,
        fatherSearch_empty_n,
        fatherSearch_read,
        relationship_V_dout,
        relationship_V_empty_n,
        relationship_V_read,
        nodo_V_out_din,
        nodo_V_out_full_n,
        nodo_V_out_write,
        nodo_V_out1_din,
        nodo_V_out1_full_n,
        nodo_V_out1_write,
        fatherSearch_out_din,
        fatherSearch_out_full_n,
        fatherSearch_out_write,
        fatherSearch_out2_din,
        fatherSearch_out2_full_n,
        fatherSearch_out2_write,
        relationship_V_out_din,
        relationship_V_out_full_n,
        relationship_V_out_write,
        relationship_V_out3_din,
        relationship_V_out3_full_n,
        relationship_V_out3_write,
        in1_V_V_din,
        in1_V_V_full_n,
        in1_V_V_write,
        in2_V_V_din,
        in2_V_V_full_n,
        in2_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [9:0] tree_V_address0;
output   tree_V_ce0;
input  [23:0] tree_V_q0;
output  [9:0] tree_V_address1;
output   tree_V_ce1;
input  [23:0] tree_V_q1;
input  [10:0] nodo_V_dout;
input   nodo_V_empty_n;
output   nodo_V_read;
input  [0:0] fatherSearch_dout;
input   fatherSearch_empty_n;
output   fatherSearch_read;
input  [1:0] relationship_V_dout;
input   relationship_V_empty_n;
output   relationship_V_read;
output  [10:0] nodo_V_out_din;
input   nodo_V_out_full_n;
output   nodo_V_out_write;
output  [10:0] nodo_V_out1_din;
input   nodo_V_out1_full_n;
output   nodo_V_out1_write;
output  [0:0] fatherSearch_out_din;
input   fatherSearch_out_full_n;
output   fatherSearch_out_write;
output  [0:0] fatherSearch_out2_din;
input   fatherSearch_out2_full_n;
output   fatherSearch_out2_write;
output  [1:0] relationship_V_out_din;
input   relationship_V_out_full_n;
output   relationship_V_out_write;
output  [1:0] relationship_V_out3_din;
input   relationship_V_out3_full_n;
output   relationship_V_out3_write;
output  [23:0] in1_V_V_din;
input   in1_V_V_full_n;
output   in1_V_V_write;
output  [23:0] in2_V_V_din;
input   in2_V_V_full_n;
output   in2_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg tree_V_ce0;
reg tree_V_ce1;
reg nodo_V_read;
reg fatherSearch_read;
reg relationship_V_read;
reg nodo_V_out_write;
reg nodo_V_out1_write;
reg fatherSearch_out_write;
reg fatherSearch_out2_write;
reg relationship_V_out_write;
reg relationship_V_out3_write;
reg[23:0] in1_V_V_din;
reg in1_V_V_write;
reg[23:0] in2_V_V_din;
reg in2_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    nodo_V_blk_n;
reg    fatherSearch_blk_n;
reg    relationship_V_blk_n;
reg    nodo_V_out_blk_n;
reg    nodo_V_out1_blk_n;
reg    fatherSearch_out_blk_n;
reg    fatherSearch_out2_blk_n;
reg    relationship_V_out_blk_n;
reg    relationship_V_out3_blk_n;
reg    in1_V_V_blk_n;
wire   [0:0] and_ln30_fu_212_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_reg_256;
wire    ap_CS_fsm_state4;
reg   [0:0] and_ln30_reg_252;
reg    in2_V_V_blk_n;
reg   [10:0] i_0_i_i_i_i_reg_195;
reg    ap_block_state1;
wire   [0:0] tmp_fu_218_p3;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] i_fu_246_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [63:0] zext_ln36_fu_230_p1;
wire   [63:0] zext_ln37_fu_241_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_state4;
wire   [0:0] icmp_ln30_fu_206_p2;
wire   [9:0] trunc_ln34_fu_226_p1;
wire   [9:0] or_ln37_fu_235_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd0 == and_ln30_fu_212_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd0 == and_ln30_fu_212_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd0 == and_ln30_fu_212_p2))) begin
        i_0_i_i_i_i_reg_195 <= 11'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_fu_218_p3 == 1'd0))) begin
        i_0_i_i_i_i_reg_195 <= i_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln30_reg_252 <= and_ln30_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_256 <= i_0_i_i_i_i_reg_195[32'd10];
    end
end

always @ (*) begin
    if ((tmp_fu_218_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_blk_n = fatherSearch_empty_n;
    end else begin
        fatherSearch_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_out2_blk_n = fatherSearch_out2_full_n;
    end else begin
        fatherSearch_out2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_out2_write = 1'b1;
    end else begin
        fatherSearch_out2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_out_blk_n = fatherSearch_out_full_n;
    end else begin
        fatherSearch_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_out_write = 1'b1;
    end else begin
        fatherSearch_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        fatherSearch_read = 1'b1;
    end else begin
        fatherSearch_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | ((1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_256 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        in1_V_V_blk_n = in1_V_V_full_n;
    end else begin
        in1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_256 == 1'd0))) begin
        in1_V_V_din = tree_V_q0;
    end else if (((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | (~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)))) begin
        in1_V_V_din = 24'd1025;
    end else begin
        in1_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | (~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_256 == 1'd0)))) begin
        in1_V_V_write = 1'b1;
    end else begin
        in1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | ((1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_256 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        in2_V_V_blk_n = in2_V_V_full_n;
    end else begin
        in2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_256 == 1'd0))) begin
        in2_V_V_din = tree_V_q1;
    end else if (((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | (~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)))) begin
        in2_V_V_din = 24'd1025;
    end else begin
        in2_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2)) | (~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln30_reg_252)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_256 == 1'd0)))) begin
        in2_V_V_write = 1'b1;
    end else begin
        in2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_blk_n = nodo_V_empty_n;
    end else begin
        nodo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_out1_blk_n = nodo_V_out1_full_n;
    end else begin
        nodo_V_out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_out1_write = 1'b1;
    end else begin
        nodo_V_out1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_out_blk_n = nodo_V_out_full_n;
    end else begin
        nodo_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_out_write = 1'b1;
    end else begin
        nodo_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        nodo_V_read = 1'b1;
    end else begin
        nodo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_blk_n = relationship_V_empty_n;
    end else begin
        relationship_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_out3_blk_n = relationship_V_out3_full_n;
    end else begin
        relationship_V_out3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_out3_write = 1'b1;
    end else begin
        relationship_V_out3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_out_blk_n = relationship_V_out_full_n;
    end else begin
        relationship_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_out_write = 1'b1;
    end else begin
        relationship_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1))) begin
        relationship_V_read = 1'b1;
    end else begin
        relationship_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tree_V_ce0 = 1'b1;
    end else begin
        tree_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tree_V_ce1 = 1'b1;
    end else begin
        tree_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln30_fu_212_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2))) & (1'b1 == ap_CS_fsm_state1) & (1'd0 == and_ln30_fu_212_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_fu_218_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_fu_218_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252))) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln30_fu_212_p2 = (icmp_ln30_fu_206_p2 & fatherSearch_dout);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in2_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0)) | ((in1_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in2_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0)) | ((in1_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in2_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0)) | ((in1_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (relationship_V_out3_full_n == 1'b0) | (relationship_V_out_full_n == 1'b0) | (fatherSearch_out2_full_n == 1'b0) | (fatherSearch_out_full_n == 1'b0) | (nodo_V_out1_full_n == 1'b0) | (nodo_V_out_full_n == 1'b0) | (relationship_V_empty_n == 1'b0) | (fatherSearch_empty_n == 1'b0) | (nodo_V_empty_n == 1'b0) | (ap_done_reg == 1'b1) | ((in2_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)) | ((in1_V_V_full_n == 1'b0) & (1'd1 == and_ln30_fu_212_p2)));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((in2_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0)) | ((in1_V_V_full_n == 1'b0) & (tmp_reg_256 == 1'd0)));
end

always @ (*) begin
    ap_block_state4 = (((in2_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)) | ((in1_V_V_full_n == 1'b0) & (1'd0 == and_ln30_reg_252)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign fatherSearch_out2_din = fatherSearch_dout;

assign fatherSearch_out_din = fatherSearch_dout;

assign i_fu_246_p2 = (11'd2 + i_0_i_i_i_i_reg_195);

assign icmp_ln30_fu_206_p2 = ((nodo_V_dout == 11'd1) ? 1'b1 : 1'b0);

assign nodo_V_out1_din = nodo_V_dout;

assign nodo_V_out_din = nodo_V_dout;

assign or_ln37_fu_235_p2 = (trunc_ln34_fu_226_p1 | 10'd1);

assign relationship_V_out3_din = relationship_V_dout;

assign relationship_V_out_din = relationship_V_dout;

assign start_out = real_start;

assign tmp_fu_218_p3 = i_0_i_i_i_i_reg_195[32'd10];

assign tree_V_address0 = zext_ln36_fu_230_p1;

assign tree_V_address1 = zext_ln37_fu_241_p1;

assign trunc_ln34_fu_226_p1 = i_0_i_i_i_i_reg_195[9:0];

assign zext_ln36_fu_230_p1 = i_0_i_i_i_i_reg_195;

assign zext_ln37_fu_241_p1 = or_ln37_fu_235_p2;

endmodule //preprocessor_cam52
