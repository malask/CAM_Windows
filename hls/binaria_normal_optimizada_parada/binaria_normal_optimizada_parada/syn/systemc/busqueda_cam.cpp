// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "busqueda_cam.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic busqueda_cam::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic busqueda_cam::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> busqueda_cam::ap_ST_fsm_state1 = "1";
const sc_lv<10> busqueda_cam::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> busqueda_cam::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> busqueda_cam::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state6 = "10000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state7 = "100000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state8 = "1000000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state9 = "10000000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state10 = "100000000";
const sc_lv<10> busqueda_cam::ap_ST_fsm_state11 = "1000000000";
const bool busqueda_cam::ap_const_boolean_1 = true;
const sc_lv<32> busqueda_cam::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> busqueda_cam::ap_const_lv1_1 = "1";
const sc_lv<32> busqueda_cam::ap_const_lv32_7 = "111";
const sc_lv<1> busqueda_cam::ap_const_lv1_0 = "0";
const sc_lv<32> busqueda_cam::ap_const_lv32_3 = "11";
const bool busqueda_cam::ap_const_boolean_0 = false;
const sc_lv<32> busqueda_cam::ap_const_lv32_1 = "1";
const sc_lv<32> busqueda_cam::ap_const_lv32_9 = "1001";
const sc_lv<32> busqueda_cam::ap_const_lv32_2 = "10";
const sc_lv<32> busqueda_cam::ap_const_lv32_5 = "101";
const sc_lv<32> busqueda_cam::ap_const_lv32_6 = "110";
const sc_lv<11> busqueda_cam::ap_const_lv11_0 = "00000000000";
const sc_lv<32> busqueda_cam::ap_const_lv32_C = "1100";
const sc_lv<11> busqueda_cam::ap_const_lv11_1 = "1";
const sc_lv<2> busqueda_cam::ap_const_lv2_0 = "00";
const sc_lv<32> busqueda_cam::ap_const_lv32_A = "1010";
const sc_lv<10> busqueda_cam::ap_const_lv10_1 = "1";
const sc_lv<32> busqueda_cam::ap_const_lv32_D = "1101";
const sc_lv<32> busqueda_cam::ap_const_lv32_17 = "10111";
const sc_lv<11> busqueda_cam::ap_const_lv11_2 = "10";

busqueda_cam::busqueda_cam(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln25_fu_247_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( fatherSearch );

    SC_METHOD(thread_and_ln25_fu_247_p2);
    sensitive << ( icmp_ln25_fu_241_p2 );
    sensitive << ( and_ln25_fu_247_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op64_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op64_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op64_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op53_write_state4 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op53_write_state4 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op53_write_state4 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_reg_447 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_predicate_op53_write_state4 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_predicate_op64_write_state5 );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_predicate_op96_write_state9 );
    sensitive << ( ap_predicate_op99_write_state9 );

    SC_METHOD(thread_ap_condition_198);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ap_condition_428);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_flag_4_phi_fu_200_p4);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( or_ln56_reg_492 );
    sensitive << ( ap_phi_reg_pp0_iter0_flag_2_reg_183 );

    SC_METHOD(thread_ap_phi_mux_i1_0_phi_fu_175_p4);
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i1_0_reg_171 );
    sensitive << ( or_ln60_1_reg_501 );
    sensitive << ( i_1_reg_505 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_flag_4_reg_195);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( or_ln56_fu_334_p2 );

    SC_METHOD(thread_ap_predicate_op53_write_state4);
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( or_ln52_reg_478 );

    SC_METHOD(thread_ap_predicate_op64_write_state5);
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( or_ln56_reg_492 );

    SC_METHOD(thread_ap_predicate_op96_write_state9);
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( or_ln36_reg_534 );

    SC_METHOD(thread_ap_predicate_op99_write_state9);
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( or_ln36_reg_534 );

    SC_METHOD(thread_ap_predicate_tran5to6_state4);
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( or_ln60_1_fu_350_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( result_V_V_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );

    SC_METHOD(thread_compare_node_max_V_1_fu_297_p4);
    sensitive << ( tree_V_q1 );

    SC_METHOD(thread_compare_node_min_V_1_fu_287_p4);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_fatherSearch_read_read_fu_92_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( fatherSearch );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );

    SC_METHOD(thread_grp_fu_221_p4);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_grp_fu_231_p4);
    sensitive << ( tree_V_q1 );

    SC_METHOD(thread_i_1_fu_355_p2);
    sensitive << ( i1_0_reg_171 );

    SC_METHOD(thread_i_fu_409_p2);
    sensitive << ( i_0_reg_209 );

    SC_METHOD(thread_icmp_ln25_fu_241_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );

    SC_METHOD(thread_icmp_ln36_1_fu_253_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( relationship_V );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );

    SC_METHOD(thread_icmp_ln36_fu_389_p2);
    sensitive << ( nodo_V );
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( grp_fu_221_p4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_icmp_ln40_fu_399_p2);
    sensitive << ( nodo_V );
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( grp_fu_231_p4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( or_ln36_fu_394_p2 );

    SC_METHOD(thread_icmp_ln879_1_fu_323_p2);
    sensitive << ( nodo_V );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( compare_node_max_V_1_fu_297_p4 );

    SC_METHOD(thread_icmp_ln879_fu_307_p2);
    sensitive << ( nodo_V );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( compare_node_min_V_1_fu_287_p4 );

    SC_METHOD(thread_or_ln33_fu_378_p2);
    sensitive << ( trunc_ln30_fu_369_p1 );

    SC_METHOD(thread_or_ln36_fu_394_p2);
    sensitive << ( icmp_ln36_1_reg_451 );
    sensitive << ( icmp_ln36_fu_389_p2 );

    SC_METHOD(thread_or_ln40_fu_404_p2);
    sensitive << ( icmp_ln36_1_reg_451 );
    sensitive << ( icmp_ln40_fu_399_p2 );

    SC_METHOD(thread_or_ln49_fu_276_p2);
    sensitive << ( trunc_ln46_fu_267_p1 );

    SC_METHOD(thread_or_ln52_fu_318_p2);
    sensitive << ( icmp_ln36_1_reg_451 );
    sensitive << ( xor_ln52_fu_312_p2 );

    SC_METHOD(thread_or_ln56_fu_334_p2);
    sensitive << ( icmp_ln36_1_reg_451 );
    sensitive << ( xor_ln56_fu_328_p2 );

    SC_METHOD(thread_or_ln60_1_fu_350_p2);
    sensitive << ( icmp_ln879_1_reg_487 );
    sensitive << ( or_ln60_fu_345_p2 );

    SC_METHOD(thread_or_ln60_fu_345_p2);
    sensitive << ( icmp_ln879_reg_473 );
    sensitive << ( xor_ln60_fu_339_p2 );

    SC_METHOD(thread_result_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( or_ln36_reg_534 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_3_reg_459 );
    sensitive << ( or_ln52_reg_478 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_ln56_reg_492 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );

    SC_METHOD(thread_result_V_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );
    sensitive << ( ap_predicate_op64_write_state5 );
    sensitive << ( tmp_V_1_reg_482 );
    sensitive << ( tmp_V_3_reg_496 );
    sensitive << ( ap_predicate_op53_write_state4 );
    sensitive << ( valor_V_reg_524 );
    sensitive << ( valor2_V_reg_529 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_predicate_op96_write_state9 );
    sensitive << ( ap_predicate_op99_write_state9 );

    SC_METHOD(thread_result_V_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );
    sensitive << ( ap_predicate_op64_write_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_predicate_op53_write_state4 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_predicate_op96_write_state9 );
    sensitive << ( ap_predicate_op99_write_state9 );

    SC_METHOD(thread_tree_V_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln48_fu_271_p1 );
    sensitive << ( zext_ln32_fu_373_p1 );

    SC_METHOD(thread_tree_V_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln49_fu_282_p1 );
    sensitive << ( zext_ln33_fu_384_p1 );

    SC_METHOD(thread_tree_V_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tree_V_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_trunc_ln30_fu_369_p1);
    sensitive << ( i_0_reg_209 );

    SC_METHOD(thread_trunc_ln46_fu_267_p1);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_175_p4 );

    SC_METHOD(thread_xor_ln52_fu_312_p2);
    sensitive << ( icmp_ln879_fu_307_p2 );

    SC_METHOD(thread_xor_ln56_fu_328_p2);
    sensitive << ( icmp_ln879_1_fu_323_p2 );

    SC_METHOD(thread_xor_ln60_fu_339_p2);
    sensitive << ( ap_phi_mux_flag_4_phi_fu_200_p4 );

    SC_METHOD(thread_zext_ln32_fu_373_p1);
    sensitive << ( i_0_reg_209 );

    SC_METHOD(thread_zext_ln33_fu_384_p1);
    sensitive << ( or_ln33_fu_378_p2 );

    SC_METHOD(thread_zext_ln48_fu_271_p1);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_175_p4 );

    SC_METHOD(thread_zext_ln49_fu_282_p1);
    sensitive << ( or_ln49_fu_276_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( result_V_V_full_n );
    sensitive << ( and_ln25_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_2_reg_510 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln25_reg_447 );
    sensitive << ( fatherSearch_read_read_fu_92_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( or_ln36_fu_394_p2 );
    sensitive << ( or_ln40_fu_404_p2 );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_predicate_op96_write_state9 );
    sensitive << ( ap_predicate_op99_write_state9 );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "busqueda_cam_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, tree_V_address0, "(port)tree_V_address0");
    sc_trace(mVcdFile, tree_V_ce0, "(port)tree_V_ce0");
    sc_trace(mVcdFile, tree_V_q0, "(port)tree_V_q0");
    sc_trace(mVcdFile, tree_V_address1, "(port)tree_V_address1");
    sc_trace(mVcdFile, tree_V_ce1, "(port)tree_V_ce1");
    sc_trace(mVcdFile, tree_V_q1, "(port)tree_V_q1");
    sc_trace(mVcdFile, nodo_V, "(port)nodo_V");
    sc_trace(mVcdFile, relationship_V, "(port)relationship_V");
    sc_trace(mVcdFile, fatherSearch, "(port)fatherSearch");
    sc_trace(mVcdFile, result_V_V_din, "(port)result_V_V_din");
    sc_trace(mVcdFile, result_V_V_full_n, "(port)result_V_V_full_n");
    sc_trace(mVcdFile, result_V_V_write, "(port)result_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, result_V_V_blk_n, "result_V_V_blk_n");
    sc_trace(mVcdFile, and_ln25_fu_247_p2, "and_ln25_fu_247_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_2_reg_510, "tmp_2_reg_510");
    sc_trace(mVcdFile, or_ln36_reg_534, "or_ln36_reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_3_reg_459, "tmp_3_reg_459");
    sc_trace(mVcdFile, or_ln52_reg_478, "or_ln52_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, or_ln56_reg_492, "or_ln56_reg_492");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, and_ln25_reg_447, "and_ln25_reg_447");
    sc_trace(mVcdFile, flag_0_reg_159, "flag_0_reg_159");
    sc_trace(mVcdFile, i1_0_reg_171, "i1_0_reg_171");
    sc_trace(mVcdFile, flag_4_reg_195, "flag_4_reg_195");
    sc_trace(mVcdFile, fatherSearch_read_read_fu_92_p2, "fatherSearch_read_read_fu_92_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln36_1_fu_253_p2, "icmp_ln36_1_fu_253_p2");
    sc_trace(mVcdFile, icmp_ln36_1_reg_451, "icmp_ln36_1_reg_451");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op64_write_state5, "ap_predicate_op64_write_state5");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln879_fu_307_p2, "icmp_ln879_fu_307_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_473, "icmp_ln879_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, or_ln52_fu_318_p2, "or_ln52_fu_318_p2");
    sc_trace(mVcdFile, grp_fu_221_p4, "grp_fu_221_p4");
    sc_trace(mVcdFile, tmp_V_1_reg_482, "tmp_V_1_reg_482");
    sc_trace(mVcdFile, icmp_ln879_1_fu_323_p2, "icmp_ln879_1_fu_323_p2");
    sc_trace(mVcdFile, icmp_ln879_1_reg_487, "icmp_ln879_1_reg_487");
    sc_trace(mVcdFile, or_ln56_fu_334_p2, "or_ln56_fu_334_p2");
    sc_trace(mVcdFile, grp_fu_231_p4, "grp_fu_231_p4");
    sc_trace(mVcdFile, tmp_V_3_reg_496, "tmp_V_3_reg_496");
    sc_trace(mVcdFile, or_ln60_1_fu_350_p2, "or_ln60_1_fu_350_p2");
    sc_trace(mVcdFile, or_ln60_1_reg_501, "or_ln60_1_reg_501");
    sc_trace(mVcdFile, ap_predicate_op53_write_state4, "ap_predicate_op53_write_state4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, i_1_fu_355_p2, "i_1_fu_355_p2");
    sc_trace(mVcdFile, i_1_reg_505, "i_1_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, valor_V_reg_524, "valor_V_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, valor2_V_reg_529, "valor2_V_reg_529");
    sc_trace(mVcdFile, or_ln36_fu_394_p2, "or_ln36_fu_394_p2");
    sc_trace(mVcdFile, i_fu_409_p2, "i_fu_409_p2");
    sc_trace(mVcdFile, or_ln40_fu_404_p2, "or_ln40_fu_404_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_predicate_tran5to6_state4, "ap_predicate_tran5to6_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i1_0_phi_fu_175_p4, "ap_phi_mux_i1_0_phi_fu_175_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_flag_2_reg_183, "ap_phi_reg_pp0_iter0_flag_2_reg_183");
    sc_trace(mVcdFile, ap_phi_mux_flag_4_phi_fu_200_p4, "ap_phi_mux_flag_4_phi_fu_200_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_flag_4_reg_195, "ap_phi_reg_pp0_iter0_flag_4_reg_195");
    sc_trace(mVcdFile, i_0_reg_209, "i_0_reg_209");
    sc_trace(mVcdFile, zext_ln48_fu_271_p1, "zext_ln48_fu_271_p1");
    sc_trace(mVcdFile, zext_ln49_fu_282_p1, "zext_ln49_fu_282_p1");
    sc_trace(mVcdFile, zext_ln32_fu_373_p1, "zext_ln32_fu_373_p1");
    sc_trace(mVcdFile, zext_ln33_fu_384_p1, "zext_ln33_fu_384_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_predicate_op96_write_state9, "ap_predicate_op96_write_state9");
    sc_trace(mVcdFile, ap_predicate_op99_write_state9, "ap_predicate_op99_write_state9");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln25_fu_241_p2, "icmp_ln25_fu_241_p2");
    sc_trace(mVcdFile, and_ln25_fu_247_p1, "and_ln25_fu_247_p1");
    sc_trace(mVcdFile, trunc_ln46_fu_267_p1, "trunc_ln46_fu_267_p1");
    sc_trace(mVcdFile, or_ln49_fu_276_p2, "or_ln49_fu_276_p2");
    sc_trace(mVcdFile, compare_node_min_V_1_fu_287_p4, "compare_node_min_V_1_fu_287_p4");
    sc_trace(mVcdFile, xor_ln52_fu_312_p2, "xor_ln52_fu_312_p2");
    sc_trace(mVcdFile, compare_node_max_V_1_fu_297_p4, "compare_node_max_V_1_fu_297_p4");
    sc_trace(mVcdFile, xor_ln56_fu_328_p2, "xor_ln56_fu_328_p2");
    sc_trace(mVcdFile, xor_ln60_fu_339_p2, "xor_ln60_fu_339_p2");
    sc_trace(mVcdFile, or_ln60_fu_345_p2, "or_ln60_fu_345_p2");
    sc_trace(mVcdFile, trunc_ln30_fu_369_p1, "trunc_ln30_fu_369_p1");
    sc_trace(mVcdFile, or_ln33_fu_378_p2, "or_ln33_fu_378_p2");
    sc_trace(mVcdFile, icmp_ln36_fu_389_p2, "icmp_ln36_fu_389_p2");
    sc_trace(mVcdFile, icmp_ln40_fu_399_p2, "icmp_ln40_fu_399_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_428, "ap_condition_428");
    sc_trace(mVcdFile, ap_condition_198, "ap_condition_198");
#endif

    }
}

busqueda_cam::~busqueda_cam() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void busqueda_cam::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_tran5to6_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && 
                    esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_92_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && 
                    esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_92_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_428.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln52_fu_318_p2.read())) {
            ap_phi_reg_pp0_iter0_flag_2_reg_183 = flag_0_reg_159.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln52_fu_318_p2.read())) {
            ap_phi_reg_pp0_iter0_flag_2_reg_183 = ap_const_lv1_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_92_p2.read()))) {
        flag_0_reg_159 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_ln60_1_reg_501.read()))) {
        flag_0_reg_159 = flag_4_reg_195.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_198.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, or_ln56_reg_492.read()))) {
            flag_4_reg_195 = ap_phi_reg_pp0_iter0_flag_2_reg_183.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            flag_4_reg_195 = ap_phi_reg_pp0_iter0_flag_4_reg_195.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_92_p2.read()))) {
        i1_0_reg_171 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_ln60_1_reg_501.read()))) {
        i1_0_reg_171 = i_1_reg_505.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_92_p2.read()))) {
        i_0_reg_209 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_ln36_fu_394_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, or_ln40_fu_404_p2.read()))) {
        i_0_reg_209 = i_fu_409_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))))) {
        and_ln25_reg_447 = and_ln25_fu_247_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln60_1_fu_350_p2.read()))) {
        i_1_reg_505 = i_1_fu_355_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0))) {
        icmp_ln36_1_reg_451 = icmp_ln36_1_fu_253_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        icmp_ln879_1_reg_487 = icmp_ln879_1_fu_323_p2.read();
        icmp_ln879_reg_473 = icmp_ln879_fu_307_p2.read();
        or_ln52_reg_478 = or_ln52_fu_318_p2.read();
        or_ln56_reg_492 = or_ln56_fu_334_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        or_ln36_reg_534 = or_ln36_fu_394_p2.read();
        valor2_V_reg_529 = tree_V_q1.read();
        valor_V_reg_524 = tree_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        or_ln60_1_reg_501 = or_ln60_1_fu_350_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_2_reg_510 = i_0_reg_209.read().range(10, 10);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_3_reg_459 = ap_phi_mux_i1_0_phi_fu_175_p4.read().range(10, 10);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln52_fu_318_p2.read()))) {
        tmp_V_1_reg_482 = tree_V_q0.read().range(12, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln56_fu_334_p2.read()))) {
        tmp_V_3_reg_496 = tree_V_q1.read().range(12, 2);
    }
}

void busqueda_cam::thread_and_ln25_fu_247_p1() {
    and_ln25_fu_247_p1 =  (sc_lv<1>) (fatherSearch.read());
}

void busqueda_cam::thread_and_ln25_fu_247_p2() {
    and_ln25_fu_247_p2 = (icmp_ln25_fu_241_p2.read() & and_ln25_fu_247_p1.read());
}

void busqueda_cam::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void busqueda_cam::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void busqueda_cam::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void busqueda_cam::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void busqueda_cam::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void busqueda_cam::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void busqueda_cam::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void busqueda_cam::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void busqueda_cam::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()));
}

void busqueda_cam::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()));
}

void busqueda_cam::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()));
}

void busqueda_cam::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()));
}

void busqueda_cam::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()));
}

void busqueda_cam::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()));
}

void busqueda_cam::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read())));
}

void busqueda_cam::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()));
}

void busqueda_cam::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void busqueda_cam::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()));
}

void busqueda_cam::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()));
}

void busqueda_cam::thread_ap_block_state9() {
    ap_block_state9 = ((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read())));
}

void busqueda_cam::thread_ap_condition_198() {
    ap_condition_198 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0));
}

void busqueda_cam::thread_ap_condition_428() {
    ap_condition_428 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0));
}

void busqueda_cam::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void busqueda_cam::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void busqueda_cam::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void busqueda_cam::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void busqueda_cam::thread_ap_phi_mux_flag_4_phi_fu_200_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_ln56_reg_492.read()))) {
        ap_phi_mux_flag_4_phi_fu_200_p4 = ap_phi_reg_pp0_iter0_flag_2_reg_183.read();
    } else {
        ap_phi_mux_flag_4_phi_fu_200_p4 = ap_const_lv1_1;
    }
}

void busqueda_cam::thread_ap_phi_mux_i1_0_phi_fu_175_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_ln60_1_reg_501.read()))) {
        ap_phi_mux_i1_0_phi_fu_175_p4 = i_1_reg_505.read();
    } else {
        ap_phi_mux_i1_0_phi_fu_175_p4 = i1_0_reg_171.read();
    }
}

void busqueda_cam::thread_ap_phi_reg_pp0_iter0_flag_4_reg_195() {
    ap_phi_reg_pp0_iter0_flag_4_reg_195 = ap_const_lv1_1;
}

void busqueda_cam::thread_ap_predicate_op53_write_state4() {
    ap_predicate_op53_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln52_reg_478.read()));
}

void busqueda_cam::thread_ap_predicate_op64_write_state5() {
    ap_predicate_op64_write_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln56_reg_492.read()));
}

void busqueda_cam::thread_ap_predicate_op96_write_state9() {
    ap_predicate_op96_write_state9 = (esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln36_reg_534.read()));
}

void busqueda_cam::thread_ap_predicate_op99_write_state9() {
    ap_predicate_op99_write_state9 = (esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln36_reg_534.read()));
}

void busqueda_cam::thread_ap_predicate_tran5to6_state4() {
    ap_predicate_tran5to6_state4 = (esl_seteq<1,1,1>(ap_const_lv1_0, or_ln60_1_fu_350_p2.read()) || esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_459.read()));
}

void busqueda_cam::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void busqueda_cam::thread_compare_node_max_V_1_fu_297_p4() {
    compare_node_max_V_1_fu_297_p4 = tree_V_q1.read().range(23, 13);
}

void busqueda_cam::thread_compare_node_min_V_1_fu_287_p4() {
    compare_node_min_V_1_fu_287_p4 = tree_V_q0.read().range(23, 13);
}

void busqueda_cam::thread_fatherSearch_read_read_fu_92_p2() {
    fatherSearch_read_read_fu_92_p2 =  (sc_lv<1>) (fatherSearch.read());
}

void busqueda_cam::thread_grp_fu_221_p4() {
    grp_fu_221_p4 = tree_V_q0.read().range(12, 2);
}

void busqueda_cam::thread_grp_fu_231_p4() {
    grp_fu_231_p4 = tree_V_q1.read().range(12, 2);
}

void busqueda_cam::thread_i_1_fu_355_p2() {
    i_1_fu_355_p2 = (!i1_0_reg_171.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_biguint<11>(i1_0_reg_171.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void busqueda_cam::thread_i_fu_409_p2() {
    i_fu_409_p2 = (!i_0_reg_209.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_biguint<11>(i_0_reg_209.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void busqueda_cam::thread_icmp_ln25_fu_241_p2() {
    icmp_ln25_fu_241_p2 = (!nodo_V.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<1>(): sc_lv<1>(nodo_V.read() == ap_const_lv11_1);
}

void busqueda_cam::thread_icmp_ln36_1_fu_253_p2() {
    icmp_ln36_1_fu_253_p2 = (!relationship_V.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(relationship_V.read() != ap_const_lv2_0);
}

void busqueda_cam::thread_icmp_ln36_fu_389_p2() {
    icmp_ln36_fu_389_p2 = (!grp_fu_221_p4.read().is_01() || !nodo_V.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_221_p4.read() != nodo_V.read());
}

void busqueda_cam::thread_icmp_ln40_fu_399_p2() {
    icmp_ln40_fu_399_p2 = (!grp_fu_231_p4.read().is_01() || !nodo_V.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_231_p4.read() != nodo_V.read());
}

void busqueda_cam::thread_icmp_ln879_1_fu_323_p2() {
    icmp_ln879_1_fu_323_p2 = (!compare_node_max_V_1_fu_297_p4.read().is_01() || !nodo_V.read().is_01())? sc_lv<1>(): sc_lv<1>(compare_node_max_V_1_fu_297_p4.read() == nodo_V.read());
}

void busqueda_cam::thread_icmp_ln879_fu_307_p2() {
    icmp_ln879_fu_307_p2 = (!compare_node_min_V_1_fu_287_p4.read().is_01() || !nodo_V.read().is_01())? sc_lv<1>(): sc_lv<1>(compare_node_min_V_1_fu_287_p4.read() == nodo_V.read());
}

void busqueda_cam::thread_or_ln33_fu_378_p2() {
    or_ln33_fu_378_p2 = (trunc_ln30_fu_369_p1.read() | ap_const_lv10_1);
}

void busqueda_cam::thread_or_ln36_fu_394_p2() {
    or_ln36_fu_394_p2 = (icmp_ln36_fu_389_p2.read() | icmp_ln36_1_reg_451.read());
}

void busqueda_cam::thread_or_ln40_fu_404_p2() {
    or_ln40_fu_404_p2 = (icmp_ln40_fu_399_p2.read() | icmp_ln36_1_reg_451.read());
}

void busqueda_cam::thread_or_ln49_fu_276_p2() {
    or_ln49_fu_276_p2 = (trunc_ln46_fu_267_p1.read() | ap_const_lv10_1);
}

void busqueda_cam::thread_or_ln52_fu_318_p2() {
    or_ln52_fu_318_p2 = (icmp_ln36_1_reg_451.read() | xor_ln52_fu_312_p2.read());
}

void busqueda_cam::thread_or_ln56_fu_334_p2() {
    or_ln56_fu_334_p2 = (icmp_ln36_1_reg_451.read() | xor_ln56_fu_328_p2.read());
}

void busqueda_cam::thread_or_ln60_1_fu_350_p2() {
    or_ln60_1_fu_350_p2 = (or_ln60_fu_345_p2.read() | icmp_ln879_1_reg_487.read());
}

void busqueda_cam::thread_or_ln60_fu_345_p2() {
    or_ln60_fu_345_p2 = (icmp_ln879_reg_473.read() | xor_ln60_fu_339_p2.read());
}

void busqueda_cam::thread_result_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln36_reg_534.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln36_reg_534.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln52_reg_478.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_459.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln56_reg_492.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read())))) {
        result_V_V_blk_n = result_V_V_full_n.read();
    } else {
        result_V_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_result_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read()))))) {
        result_V_V_din = valor_V_reg_524.read().range(23, 13);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read()))))) {
        result_V_V_din = valor2_V_reg_529.read().range(23, 13);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        result_V_V_din = tmp_V_3_reg_496.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0))) {
        result_V_V_din = tmp_V_1_reg_482.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read())))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))))) {
        result_V_V_din = ap_const_lv11_0;
    } else {
        result_V_V_din = "XXXXXXXXXXX";
    }
}

void busqueda_cam::thread_result_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op53_write_state4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op64_write_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        result_V_V_write = ap_const_logic_1;
    } else {
        result_V_V_write = ap_const_logic_0;
    }
}

void busqueda_cam::thread_tree_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tree_V_address0 =  (sc_lv<10>) (zext_ln32_fu_373_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tree_V_address0 =  (sc_lv<10>) (zext_ln48_fu_271_p1.read());
    } else {
        tree_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void busqueda_cam::thread_tree_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tree_V_address1 =  (sc_lv<10>) (zext_ln33_fu_384_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tree_V_address1 =  (sc_lv<10>) (zext_ln49_fu_282_p1.read());
    } else {
        tree_V_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void busqueda_cam::thread_tree_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tree_V_ce0 = ap_const_logic_1;
    } else {
        tree_V_ce0 = ap_const_logic_0;
    }
}

void busqueda_cam::thread_tree_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tree_V_ce1 = ap_const_logic_1;
    } else {
        tree_V_ce1 = ap_const_logic_0;
    }
}

void busqueda_cam::thread_trunc_ln30_fu_369_p1() {
    trunc_ln30_fu_369_p1 = i_0_reg_209.read().range(10-1, 0);
}

void busqueda_cam::thread_trunc_ln46_fu_267_p1() {
    trunc_ln46_fu_267_p1 = ap_phi_mux_i1_0_phi_fu_175_p4.read().range(10-1, 0);
}

void busqueda_cam::thread_xor_ln52_fu_312_p2() {
    xor_ln52_fu_312_p2 = (icmp_ln879_fu_307_p2.read() ^ ap_const_lv1_1);
}

void busqueda_cam::thread_xor_ln56_fu_328_p2() {
    xor_ln56_fu_328_p2 = (icmp_ln879_1_fu_323_p2.read() ^ ap_const_lv1_1);
}

void busqueda_cam::thread_xor_ln60_fu_339_p2() {
    xor_ln60_fu_339_p2 = (ap_phi_mux_flag_4_phi_fu_200_p4.read() ^ ap_const_lv1_1);
}

void busqueda_cam::thread_zext_ln32_fu_373_p1() {
    zext_ln32_fu_373_p1 = esl_zext<64,11>(i_0_reg_209.read());
}

void busqueda_cam::thread_zext_ln33_fu_384_p1() {
    zext_ln33_fu_384_p1 = esl_zext<64,10>(or_ln33_fu_378_p2.read());
}

void busqueda_cam::thread_zext_ln48_fu_271_p1() {
    zext_ln48_fu_271_p1 = esl_zext<64,11>(ap_phi_mux_i1_0_phi_fu_175_p4.read());
}

void busqueda_cam::thread_zext_ln49_fu_282_p1() {
    zext_ln49_fu_282_p1 = esl_zext<64,10>(or_ln49_fu_276_p2.read());
}

void busqueda_cam::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_92_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || (esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()))) && esl_seteq<1,1,1>(and_ln25_fu_247_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, fatherSearch_read_read_fu_92_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(tmp_2_reg_510.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln36_fu_394_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln40_fu_404_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_510.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op96_write_state9.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state9.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, and_ln25_reg_447.read()) && esl_seteq<1,1,1>(ap_const_logic_0, result_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

