// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _busqueda_cam_HH_
#define _busqueda_cam_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct busqueda_cam : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > tree_V_address0;
    sc_out< sc_logic > tree_V_ce0;
    sc_in< sc_lv<24> > tree_V_q0;
    sc_out< sc_lv<10> > tree_V_address1;
    sc_out< sc_logic > tree_V_ce1;
    sc_in< sc_lv<24> > tree_V_q1;
    sc_in< sc_lv<11> > nodo_V;
    sc_in< sc_lv<2> > relationship_V;
    sc_in< sc_logic > fatherSearch;
    sc_out< sc_lv<11> > result_V_V_din;
    sc_in< sc_logic > result_V_V_full_n;
    sc_out< sc_logic > result_V_V_write;


    // Module declarations
    busqueda_cam(sc_module_name name);
    SC_HAS_PROCESS(busqueda_cam);

    ~busqueda_cam();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > result_V_V_blk_n;
    sc_signal< sc_lv<1> > and_ln25_fu_247_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_2_reg_510;
    sc_signal< sc_lv<1> > or_ln36_reg_534;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > tmp_3_reg_459;
    sc_signal< sc_lv<1> > or_ln52_reg_478;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > or_ln56_reg_492;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > and_ln25_reg_447;
    sc_signal< sc_lv<1> > flag_0_reg_159;
    sc_signal< sc_lv<11> > i1_0_reg_171;
    sc_signal< sc_lv<1> > flag_4_reg_195;
    sc_signal< sc_lv<1> > fatherSearch_read_read_fu_92_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln36_1_fu_253_p2;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_451;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op64_write_state5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln879_fu_307_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_473;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > or_ln52_fu_318_p2;
    sc_signal< sc_lv<11> > grp_fu_221_p4;
    sc_signal< sc_lv<11> > tmp_V_1_reg_482;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_323_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_reg_487;
    sc_signal< sc_lv<1> > or_ln56_fu_334_p2;
    sc_signal< sc_lv<11> > grp_fu_231_p4;
    sc_signal< sc_lv<11> > tmp_V_3_reg_496;
    sc_signal< sc_lv<1> > or_ln60_1_fu_350_p2;
    sc_signal< sc_lv<1> > or_ln60_1_reg_501;
    sc_signal< bool > ap_predicate_op53_write_state4;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<11> > i_1_fu_355_p2;
    sc_signal< sc_lv<11> > i_1_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<24> > valor_V_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<24> > valor2_V_reg_529;
    sc_signal< sc_lv<1> > or_ln36_fu_394_p2;
    sc_signal< sc_lv<11> > i_fu_409_p2;
    sc_signal< sc_lv<1> > or_ln40_fu_404_p2;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_predicate_tran5to6_state4;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_i1_0_phi_fu_175_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_flag_2_reg_183;
    sc_signal< sc_lv<1> > ap_phi_mux_flag_4_phi_fu_200_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_flag_4_reg_195;
    sc_signal< sc_lv<11> > i_0_reg_209;
    sc_signal< sc_lv<64> > zext_ln48_fu_271_p1;
    sc_signal< sc_lv<64> > zext_ln49_fu_282_p1;
    sc_signal< sc_lv<64> > zext_ln32_fu_373_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_384_p1;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_predicate_op96_write_state9;
    sc_signal< bool > ap_predicate_op99_write_state9;
    sc_signal< bool > ap_block_state9;
    sc_signal< bool > ap_block_state11;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln25_fu_241_p2;
    sc_signal< sc_lv<1> > and_ln25_fu_247_p1;
    sc_signal< sc_lv<10> > trunc_ln46_fu_267_p1;
    sc_signal< sc_lv<10> > or_ln49_fu_276_p2;
    sc_signal< sc_lv<11> > compare_node_min_V_1_fu_287_p4;
    sc_signal< sc_lv<1> > xor_ln52_fu_312_p2;
    sc_signal< sc_lv<11> > compare_node_max_V_1_fu_297_p4;
    sc_signal< sc_lv<1> > xor_ln56_fu_328_p2;
    sc_signal< sc_lv<1> > xor_ln60_fu_339_p2;
    sc_signal< sc_lv<1> > or_ln60_fu_345_p2;
    sc_signal< sc_lv<10> > trunc_ln30_fu_369_p1;
    sc_signal< sc_lv<10> > or_ln33_fu_378_p2;
    sc_signal< sc_lv<1> > icmp_ln36_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln40_fu_399_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_428;
    sc_signal< bool > ap_condition_198;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_pp0_stage1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage2;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<10> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<11> ap_const_lv11_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln25_fu_247_p1();
    void thread_and_ln25_fu_247_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state11();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state9();
    void thread_ap_condition_198();
    void thread_ap_condition_428();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_flag_4_phi_fu_200_p4();
    void thread_ap_phi_mux_i1_0_phi_fu_175_p4();
    void thread_ap_phi_reg_pp0_iter0_flag_4_reg_195();
    void thread_ap_predicate_op53_write_state4();
    void thread_ap_predicate_op64_write_state5();
    void thread_ap_predicate_op96_write_state9();
    void thread_ap_predicate_op99_write_state9();
    void thread_ap_predicate_tran5to6_state4();
    void thread_ap_ready();
    void thread_compare_node_max_V_1_fu_297_p4();
    void thread_compare_node_min_V_1_fu_287_p4();
    void thread_fatherSearch_read_read_fu_92_p2();
    void thread_grp_fu_221_p4();
    void thread_grp_fu_231_p4();
    void thread_i_1_fu_355_p2();
    void thread_i_fu_409_p2();
    void thread_icmp_ln25_fu_241_p2();
    void thread_icmp_ln36_1_fu_253_p2();
    void thread_icmp_ln36_fu_389_p2();
    void thread_icmp_ln40_fu_399_p2();
    void thread_icmp_ln879_1_fu_323_p2();
    void thread_icmp_ln879_fu_307_p2();
    void thread_or_ln33_fu_378_p2();
    void thread_or_ln36_fu_394_p2();
    void thread_or_ln40_fu_404_p2();
    void thread_or_ln49_fu_276_p2();
    void thread_or_ln52_fu_318_p2();
    void thread_or_ln56_fu_334_p2();
    void thread_or_ln60_1_fu_350_p2();
    void thread_or_ln60_fu_345_p2();
    void thread_result_V_V_blk_n();
    void thread_result_V_V_din();
    void thread_result_V_V_write();
    void thread_tree_V_address0();
    void thread_tree_V_address1();
    void thread_tree_V_ce0();
    void thread_tree_V_ce1();
    void thread_trunc_ln30_fu_369_p1();
    void thread_trunc_ln46_fu_267_p1();
    void thread_xor_ln52_fu_312_p2();
    void thread_xor_ln56_fu_328_p2();
    void thread_xor_ln60_fu_339_p2();
    void thread_zext_ln32_fu_373_p1();
    void thread_zext_ln33_fu_384_p1();
    void thread_zext_ln48_fu_271_p1();
    void thread_zext_ln49_fu_282_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
