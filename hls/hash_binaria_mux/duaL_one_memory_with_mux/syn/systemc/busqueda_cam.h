// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _busqueda_cam_HH_
#define _busqueda_cam_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct busqueda_cam : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<10> > tree_V_address0;
    sc_out< sc_logic > tree_V_ce0;
    sc_in< sc_lv<24> > tree_V_q0;
    sc_in< sc_lv<11> > nodo_V_dout;
    sc_in< sc_logic > nodo_V_empty_n;
    sc_out< sc_logic > nodo_V_read;
    sc_in< sc_lv<2> > relationship_V_dout;
    sc_in< sc_logic > relationship_V_empty_n;
    sc_out< sc_logic > relationship_V_read;
    sc_in< sc_lv<1> > fatherSearch_dout;
    sc_in< sc_logic > fatherSearch_empty_n;
    sc_out< sc_logic > fatherSearch_read;
    sc_out< sc_lv<11> > in1_V_V_din;
    sc_in< sc_logic > in1_V_V_full_n;
    sc_out< sc_logic > in1_V_V_write;
    sc_out< sc_lv<11> > in2_V_V_din;
    sc_in< sc_logic > in2_V_V_full_n;
    sc_out< sc_logic > in2_V_V_write;


    // Module declarations
    busqueda_cam(sc_module_name name);
    SC_HAS_PROCESS(busqueda_cam);

    ~busqueda_cam();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > nodo_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > relationship_V_blk_n;
    sc_signal< sc_logic > fatherSearch_blk_n;
    sc_signal< sc_logic > in1_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > and_ln77_fu_231_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > and_ln62_fu_192_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > in2_V_V_blk_n;
    sc_signal< sc_lv<1> > and_ln80_fu_247_p2;
    sc_signal< sc_lv<1> > and_ln65_fu_208_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<11> > nodo_V_read_reg_258;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<2> > relationship_V_read_reg_266;
    sc_signal< sc_lv<24> > tree_V_load_reg_277;
    sc_signal< sc_lv<1> > fatherSearch_read_read_fu_60_p2;
    sc_signal< sc_lv<10> > tree_V_addr_1_gep_fu_105_p3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<11> > grp_fu_114_p4;
    sc_signal< bool > ap_block_state4;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<11> > grp_fu_124_p4;
    sc_signal< sc_lv<2> > trunc_ln647_2_fu_175_p1;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_182_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_187_p2;
    sc_signal< sc_lv<2> > trunc_ln647_3_fu_178_p1;
    sc_signal< sc_lv<1> > icmp_ln879_7_fu_198_p2;
    sc_signal< sc_lv<1> > icmp_ln879_8_fu_203_p2;
    sc_signal< sc_lv<11> > p_Result_15_i_i_fu_145_p4;
    sc_signal< sc_lv<2> > trunc_ln647_fu_214_p1;
    sc_signal< sc_lv<1> > icmp_ln879_fu_221_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_226_p2;
    sc_signal< sc_lv<11> > p_Result_16_i_i_fu_165_p4;
    sc_signal< sc_lv<2> > trunc_ln647_1_fu_217_p1;
    sc_signal< sc_lv<1> > icmp_ln879_5_fu_237_p2;
    sc_signal< sc_lv<1> > icmp_ln879_6_fu_242_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_C;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln62_fu_192_p2();
    void thread_and_ln65_fu_208_p2();
    void thread_and_ln77_fu_231_p2();
    void thread_and_ln80_fu_247_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_fatherSearch_blk_n();
    void thread_fatherSearch_read();
    void thread_fatherSearch_read_read_fu_60_p2();
    void thread_grp_fu_114_p4();
    void thread_grp_fu_124_p4();
    void thread_icmp_ln879_2_fu_226_p2();
    void thread_icmp_ln879_3_fu_182_p2();
    void thread_icmp_ln879_4_fu_187_p2();
    void thread_icmp_ln879_5_fu_237_p2();
    void thread_icmp_ln879_6_fu_242_p2();
    void thread_icmp_ln879_7_fu_198_p2();
    void thread_icmp_ln879_8_fu_203_p2();
    void thread_icmp_ln879_fu_221_p2();
    void thread_in1_V_V_blk_n();
    void thread_in1_V_V_din();
    void thread_in1_V_V_write();
    void thread_in2_V_V_blk_n();
    void thread_in2_V_V_din();
    void thread_in2_V_V_write();
    void thread_internal_ap_ready();
    void thread_nodo_V_blk_n();
    void thread_nodo_V_read();
    void thread_p_Result_15_i_i_fu_145_p4();
    void thread_p_Result_16_i_i_fu_165_p4();
    void thread_real_start();
    void thread_relationship_V_blk_n();
    void thread_relationship_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tree_V_addr_1_gep_fu_105_p3();
    void thread_tree_V_address0();
    void thread_tree_V_ce0();
    void thread_trunc_ln647_1_fu_217_p1();
    void thread_trunc_ln647_2_fu_175_p1();
    void thread_trunc_ln647_3_fu_178_p1();
    void thread_trunc_ln647_fu_214_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
