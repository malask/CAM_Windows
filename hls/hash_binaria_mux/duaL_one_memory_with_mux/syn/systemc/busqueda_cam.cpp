// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "busqueda_cam.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic busqueda_cam::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic busqueda_cam::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> busqueda_cam::ap_ST_fsm_state1 = "1";
const sc_lv<5> busqueda_cam::ap_ST_fsm_state2 = "10";
const sc_lv<5> busqueda_cam::ap_ST_fsm_state3 = "100";
const sc_lv<5> busqueda_cam::ap_ST_fsm_state4 = "1000";
const sc_lv<5> busqueda_cam::ap_ST_fsm_state5 = "10000";
const sc_lv<32> busqueda_cam::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> busqueda_cam::ap_const_lv32_1 = "1";
const sc_lv<32> busqueda_cam::ap_const_lv32_3 = "11";
const sc_lv<1> busqueda_cam::ap_const_lv1_1 = "1";
const sc_lv<32> busqueda_cam::ap_const_lv32_2 = "10";
const sc_lv<32> busqueda_cam::ap_const_lv32_4 = "100";
const sc_lv<1> busqueda_cam::ap_const_lv1_0 = "0";
const sc_lv<64> busqueda_cam::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> busqueda_cam::ap_const_lv64_1 = "1";
const sc_lv<11> busqueda_cam::ap_const_lv11_0 = "00000000000";
const sc_lv<32> busqueda_cam::ap_const_lv32_D = "1101";
const sc_lv<32> busqueda_cam::ap_const_lv32_17 = "10111";
const sc_lv<32> busqueda_cam::ap_const_lv32_C = "1100";
const bool busqueda_cam::ap_const_boolean_1 = true;

busqueda_cam::busqueda_cam(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln62_fu_192_p2);
    sensitive << ( icmp_ln879_3_fu_182_p2 );
    sensitive << ( icmp_ln879_4_fu_187_p2 );

    SC_METHOD(thread_and_ln65_fu_208_p2);
    sensitive << ( icmp_ln879_7_fu_198_p2 );
    sensitive << ( icmp_ln879_8_fu_203_p2 );

    SC_METHOD(thread_and_ln77_fu_231_p2);
    sensitive << ( icmp_ln879_fu_221_p2 );
    sensitive << ( icmp_ln879_2_fu_226_p2 );

    SC_METHOD(thread_and_ln80_fu_247_p2);
    sensitive << ( icmp_ln879_5_fu_237_p2 );
    sensitive << ( icmp_ln879_6_fu_242_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( and_ln65_fu_208_p2 );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( and_ln80_fu_247_p2 );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_fatherSearch_blk_n);
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_fatherSearch_read);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_fatherSearch_read_read_fu_60_p2);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_dout );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_114_p4);
    sensitive << ( tree_V_load_reg_277 );

    SC_METHOD(thread_grp_fu_124_p4);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_icmp_ln879_2_fu_226_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( relationship_V_read_reg_266 );
    sensitive << ( trunc_ln647_fu_214_p1 );

    SC_METHOD(thread_icmp_ln879_3_fu_182_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( nodo_V_read_reg_258 );
    sensitive << ( grp_fu_114_p4 );

    SC_METHOD(thread_icmp_ln879_4_fu_187_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( relationship_V_read_reg_266 );
    sensitive << ( trunc_ln647_2_fu_175_p1 );

    SC_METHOD(thread_icmp_ln879_5_fu_237_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( nodo_V_read_reg_258 );
    sensitive << ( p_Result_16_i_i_fu_165_p4 );

    SC_METHOD(thread_icmp_ln879_6_fu_242_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( relationship_V_read_reg_266 );
    sensitive << ( trunc_ln647_1_fu_217_p1 );

    SC_METHOD(thread_icmp_ln879_7_fu_198_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( nodo_V_read_reg_258 );
    sensitive << ( grp_fu_124_p4 );

    SC_METHOD(thread_icmp_ln879_8_fu_203_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( relationship_V_read_reg_266 );
    sensitive << ( trunc_ln647_3_fu_178_p1 );

    SC_METHOD(thread_icmp_ln879_fu_221_p2);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( nodo_V_read_reg_258 );
    sensitive << ( p_Result_15_i_i_fu_145_p4 );

    SC_METHOD(thread_in1_V_V_blk_n);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_in1_V_V_din);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( tree_V_load_reg_277 );

    SC_METHOD(thread_in1_V_V_write);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );

    SC_METHOD(thread_in2_V_V_blk_n);
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );

    SC_METHOD(thread_in2_V_V_din);
    sensitive << ( tree_V_q0 );
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );

    SC_METHOD(thread_in2_V_V_write);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_nodo_V_blk_n);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_nodo_V_read);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Result_15_i_i_fu_145_p4);
    sensitive << ( tree_V_load_reg_277 );

    SC_METHOD(thread_p_Result_16_i_i_fu_165_p4);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_relationship_V_blk_n);
    sensitive << ( relationship_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_relationship_V_read);
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tree_V_addr_1_gep_fu_105_p3);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( fatherSearch_read_read_fu_60_p2 );

    SC_METHOD(thread_tree_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( fatherSearch_read_read_fu_60_p2 );
    sensitive << ( tree_V_addr_1_gep_fu_105_p3 );

    SC_METHOD(thread_tree_V_ce0);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( fatherSearch_read_read_fu_60_p2 );

    SC_METHOD(thread_trunc_ln647_1_fu_217_p1);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_trunc_ln647_2_fu_175_p1);
    sensitive << ( tree_V_load_reg_277 );

    SC_METHOD(thread_trunc_ln647_3_fu_178_p1);
    sensitive << ( tree_V_q0 );

    SC_METHOD(thread_trunc_ln647_fu_214_p1);
    sensitive << ( tree_V_load_reg_277 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( nodo_V_empty_n );
    sensitive << ( relationship_V_empty_n );
    sensitive << ( fatherSearch_empty_n );
    sensitive << ( in1_V_V_full_n );
    sensitive << ( in2_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln77_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( and_ln62_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln80_fu_247_p2 );
    sensitive << ( and_ln65_fu_208_p2 );
    sensitive << ( fatherSearch_read_read_fu_60_p2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "busqueda_cam_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, tree_V_address0, "(port)tree_V_address0");
    sc_trace(mVcdFile, tree_V_ce0, "(port)tree_V_ce0");
    sc_trace(mVcdFile, tree_V_q0, "(port)tree_V_q0");
    sc_trace(mVcdFile, nodo_V_dout, "(port)nodo_V_dout");
    sc_trace(mVcdFile, nodo_V_empty_n, "(port)nodo_V_empty_n");
    sc_trace(mVcdFile, nodo_V_read, "(port)nodo_V_read");
    sc_trace(mVcdFile, relationship_V_dout, "(port)relationship_V_dout");
    sc_trace(mVcdFile, relationship_V_empty_n, "(port)relationship_V_empty_n");
    sc_trace(mVcdFile, relationship_V_read, "(port)relationship_V_read");
    sc_trace(mVcdFile, fatherSearch_dout, "(port)fatherSearch_dout");
    sc_trace(mVcdFile, fatherSearch_empty_n, "(port)fatherSearch_empty_n");
    sc_trace(mVcdFile, fatherSearch_read, "(port)fatherSearch_read");
    sc_trace(mVcdFile, in1_V_V_din, "(port)in1_V_V_din");
    sc_trace(mVcdFile, in1_V_V_full_n, "(port)in1_V_V_full_n");
    sc_trace(mVcdFile, in1_V_V_write, "(port)in1_V_V_write");
    sc_trace(mVcdFile, in2_V_V_din, "(port)in2_V_V_din");
    sc_trace(mVcdFile, in2_V_V_full_n, "(port)in2_V_V_full_n");
    sc_trace(mVcdFile, in2_V_V_write, "(port)in2_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, nodo_V_blk_n, "nodo_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, relationship_V_blk_n, "relationship_V_blk_n");
    sc_trace(mVcdFile, fatherSearch_blk_n, "fatherSearch_blk_n");
    sc_trace(mVcdFile, in1_V_V_blk_n, "in1_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, and_ln77_fu_231_p2, "and_ln77_fu_231_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, and_ln62_fu_192_p2, "and_ln62_fu_192_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in2_V_V_blk_n, "in2_V_V_blk_n");
    sc_trace(mVcdFile, and_ln80_fu_247_p2, "and_ln80_fu_247_p2");
    sc_trace(mVcdFile, and_ln65_fu_208_p2, "and_ln65_fu_208_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, nodo_V_read_reg_258, "nodo_V_read_reg_258");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, relationship_V_read_reg_266, "relationship_V_read_reg_266");
    sc_trace(mVcdFile, tree_V_load_reg_277, "tree_V_load_reg_277");
    sc_trace(mVcdFile, fatherSearch_read_read_fu_60_p2, "fatherSearch_read_read_fu_60_p2");
    sc_trace(mVcdFile, tree_V_addr_1_gep_fu_105_p3, "tree_V_addr_1_gep_fu_105_p3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, grp_fu_114_p4, "grp_fu_114_p4");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, grp_fu_124_p4, "grp_fu_124_p4");
    sc_trace(mVcdFile, trunc_ln647_2_fu_175_p1, "trunc_ln647_2_fu_175_p1");
    sc_trace(mVcdFile, icmp_ln879_3_fu_182_p2, "icmp_ln879_3_fu_182_p2");
    sc_trace(mVcdFile, icmp_ln879_4_fu_187_p2, "icmp_ln879_4_fu_187_p2");
    sc_trace(mVcdFile, trunc_ln647_3_fu_178_p1, "trunc_ln647_3_fu_178_p1");
    sc_trace(mVcdFile, icmp_ln879_7_fu_198_p2, "icmp_ln879_7_fu_198_p2");
    sc_trace(mVcdFile, icmp_ln879_8_fu_203_p2, "icmp_ln879_8_fu_203_p2");
    sc_trace(mVcdFile, p_Result_15_i_i_fu_145_p4, "p_Result_15_i_i_fu_145_p4");
    sc_trace(mVcdFile, trunc_ln647_fu_214_p1, "trunc_ln647_fu_214_p1");
    sc_trace(mVcdFile, icmp_ln879_fu_221_p2, "icmp_ln879_fu_221_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_226_p2, "icmp_ln879_2_fu_226_p2");
    sc_trace(mVcdFile, p_Result_16_i_i_fu_165_p4, "p_Result_16_i_i_fu_165_p4");
    sc_trace(mVcdFile, trunc_ln647_1_fu_217_p1, "trunc_ln647_1_fu_217_p1");
    sc_trace(mVcdFile, icmp_ln879_5_fu_237_p2, "icmp_ln879_5_fu_237_p2");
    sc_trace(mVcdFile, icmp_ln879_6_fu_242_p2, "icmp_ln879_6_fu_242_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

busqueda_cam::~busqueda_cam() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void busqueda_cam::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        nodo_V_read_reg_258 = nodo_V_dout.read();
        relationship_V_read_reg_266 = relationship_V_dout.read();
        tree_V_load_reg_277 = tree_V_q0.read();
    }
}

void busqueda_cam::thread_and_ln62_fu_192_p2() {
    and_ln62_fu_192_p2 = (icmp_ln879_3_fu_182_p2.read() & icmp_ln879_4_fu_187_p2.read());
}

void busqueda_cam::thread_and_ln65_fu_208_p2() {
    and_ln65_fu_208_p2 = (icmp_ln879_7_fu_198_p2.read() & icmp_ln879_8_fu_203_p2.read());
}

void busqueda_cam::thread_and_ln77_fu_231_p2() {
    and_ln77_fu_231_p2 = (icmp_ln879_fu_221_p2.read() & icmp_ln879_2_fu_226_p2.read());
}

void busqueda_cam::thread_and_ln80_fu_247_p2() {
    and_ln80_fu_247_p2 = (icmp_ln879_5_fu_237_p2.read() & icmp_ln879_6_fu_242_p2.read());
}

void busqueda_cam::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void busqueda_cam::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void busqueda_cam::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void busqueda_cam::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void busqueda_cam::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void busqueda_cam::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void busqueda_cam::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read()));
}

void busqueda_cam::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())));
}

void busqueda_cam::thread_ap_block_state4() {
    ap_block_state4 = ((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())));
}

void busqueda_cam::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()));
}

void busqueda_cam::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void busqueda_cam::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void busqueda_cam::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void busqueda_cam::thread_fatherSearch_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        fatherSearch_blk_n = fatherSearch_empty_n.read();
    } else {
        fatherSearch_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_fatherSearch_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        fatherSearch_read = ap_const_logic_1;
    } else {
        fatherSearch_read = ap_const_logic_0;
    }
}

void busqueda_cam::thread_fatherSearch_read_read_fu_60_p2() {
    fatherSearch_read_read_fu_60_p2 = fatherSearch_dout.read();
}

void busqueda_cam::thread_grp_fu_114_p4() {
    grp_fu_114_p4 = tree_V_load_reg_277.read().range(23, 13);
}

void busqueda_cam::thread_grp_fu_124_p4() {
    grp_fu_124_p4 = tree_V_q0.read().range(23, 13);
}

void busqueda_cam::thread_icmp_ln879_2_fu_226_p2() {
    icmp_ln879_2_fu_226_p2 = (!trunc_ln647_fu_214_p1.read().is_01() || !relationship_V_read_reg_266.read().is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln647_fu_214_p1.read() == relationship_V_read_reg_266.read());
}

void busqueda_cam::thread_icmp_ln879_3_fu_182_p2() {
    icmp_ln879_3_fu_182_p2 = (!grp_fu_114_p4.read().is_01() || !nodo_V_read_reg_258.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_114_p4.read() == nodo_V_read_reg_258.read());
}

void busqueda_cam::thread_icmp_ln879_4_fu_187_p2() {
    icmp_ln879_4_fu_187_p2 = (!trunc_ln647_2_fu_175_p1.read().is_01() || !relationship_V_read_reg_266.read().is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln647_2_fu_175_p1.read() == relationship_V_read_reg_266.read());
}

void busqueda_cam::thread_icmp_ln879_5_fu_237_p2() {
    icmp_ln879_5_fu_237_p2 = (!p_Result_16_i_i_fu_165_p4.read().is_01() || !nodo_V_read_reg_258.read().is_01())? sc_lv<1>(): sc_lv<1>(p_Result_16_i_i_fu_165_p4.read() == nodo_V_read_reg_258.read());
}

void busqueda_cam::thread_icmp_ln879_6_fu_242_p2() {
    icmp_ln879_6_fu_242_p2 = (!trunc_ln647_1_fu_217_p1.read().is_01() || !relationship_V_read_reg_266.read().is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln647_1_fu_217_p1.read() == relationship_V_read_reg_266.read());
}

void busqueda_cam::thread_icmp_ln879_7_fu_198_p2() {
    icmp_ln879_7_fu_198_p2 = (!grp_fu_124_p4.read().is_01() || !nodo_V_read_reg_258.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_124_p4.read() == nodo_V_read_reg_258.read());
}

void busqueda_cam::thread_icmp_ln879_8_fu_203_p2() {
    icmp_ln879_8_fu_203_p2 = (!trunc_ln647_3_fu_178_p1.read().is_01() || !relationship_V_read_reg_266.read().is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln647_3_fu_178_p1.read() == relationship_V_read_reg_266.read());
}

void busqueda_cam::thread_icmp_ln879_fu_221_p2() {
    icmp_ln879_fu_221_p2 = (!p_Result_15_i_i_fu_145_p4.read().is_01() || !nodo_V_read_reg_258.read().is_01())? sc_lv<1>(): sc_lv<1>(p_Result_15_i_i_fu_145_p4.read() == nodo_V_read_reg_258.read());
}

void busqueda_cam::thread_in1_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        in1_V_V_blk_n = in1_V_V_full_n.read();
    } else {
        in1_V_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_in1_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
        in1_V_V_din = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
                !((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
        in1_V_V_din = tree_V_load_reg_277.read().range(23, 13);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
        in1_V_V_din = tree_V_load_reg_277.read().range(12, 2);
    } else {
        in1_V_V_din = "XXXXXXXXXXX";
    }
}

void busqueda_cam::thread_in1_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
          !((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
        in1_V_V_write = ap_const_logic_1;
    } else {
        in1_V_V_write = ap_const_logic_0;
    }
}

void busqueda_cam::thread_in2_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read())))) {
        in2_V_V_blk_n = in2_V_V_full_n.read();
    } else {
        in2_V_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_in2_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
        in2_V_V_din = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
                !((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
        in2_V_V_din = tree_V_q0.read().range(23, 13);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
        in2_V_V_din = tree_V_q0.read().range(12, 2);
    } else {
        in2_V_V_din = "XXXXXXXXXXX";
    }
}

void busqueda_cam::thread_in2_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
          !((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))))) {
        in2_V_V_write = ap_const_logic_1;
    } else {
        in2_V_V_write = ap_const_logic_0;
    }
}

void busqueda_cam::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void busqueda_cam::thread_nodo_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        nodo_V_blk_n = nodo_V_empty_n.read();
    } else {
        nodo_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_nodo_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        nodo_V_read = ap_const_logic_1;
    } else {
        nodo_V_read = ap_const_logic_0;
    }
}

void busqueda_cam::thread_p_Result_15_i_i_fu_145_p4() {
    p_Result_15_i_i_fu_145_p4 = tree_V_load_reg_277.read().range(12, 2);
}

void busqueda_cam::thread_p_Result_16_i_i_fu_165_p4() {
    p_Result_16_i_i_fu_165_p4 = tree_V_q0.read().range(12, 2);
}

void busqueda_cam::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void busqueda_cam::thread_relationship_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        relationship_V_blk_n = relationship_V_empty_n.read();
    } else {
        relationship_V_blk_n = ap_const_logic_1;
    }
}

void busqueda_cam::thread_relationship_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())))) {
        relationship_V_read = ap_const_logic_1;
    } else {
        relationship_V_read = ap_const_logic_0;
    }
}

void busqueda_cam::thread_start_out() {
    start_out = real_start.read();
}

void busqueda_cam::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void busqueda_cam::thread_tree_V_addr_1_gep_fu_105_p3() {
    tree_V_addr_1_gep_fu_105_p3 =  (sc_lv<10>) (ap_const_lv64_1);
}

void busqueda_cam::thread_tree_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_60_p2.read()))) {
        tree_V_address0 = tree_V_addr_1_gep_fu_105_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(fatherSearch_read_read_fu_60_p2.read(), ap_const_lv1_0))) {
        tree_V_address0 =  (sc_lv<10>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tree_V_address0 =  (sc_lv<10>) (ap_const_lv64_0);
    } else {
        tree_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void busqueda_cam::thread_tree_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
          esl_seteq<1,1,1>(fatherSearch_read_read_fu_60_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_60_p2.read())))) {
        tree_V_ce0 = ap_const_logic_1;
    } else {
        tree_V_ce0 = ap_const_logic_0;
    }
}

void busqueda_cam::thread_trunc_ln647_1_fu_217_p1() {
    trunc_ln647_1_fu_217_p1 = tree_V_q0.read().range(2-1, 0);
}

void busqueda_cam::thread_trunc_ln647_2_fu_175_p1() {
    trunc_ln647_2_fu_175_p1 = tree_V_load_reg_277.read().range(2-1, 0);
}

void busqueda_cam::thread_trunc_ln647_3_fu_178_p1() {
    trunc_ln647_3_fu_178_p1 = tree_V_q0.read().range(2-1, 0);
}

void busqueda_cam::thread_trunc_ln647_fu_214_p1() {
    trunc_ln647_fu_214_p1 = tree_V_load_reg_277.read().range(2-1, 0);
}

void busqueda_cam::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, fatherSearch_read_read_fu_60_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, nodo_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, relationship_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, fatherSearch_empty_n.read())) && esl_seteq<1,1,1>(fatherSearch_read_read_fu_60_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_1, and_ln62_fu_192_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln65_fu_208_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !((esl_seteq<1,1,1>(and_ln77_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln80_fu_247_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, in1_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

