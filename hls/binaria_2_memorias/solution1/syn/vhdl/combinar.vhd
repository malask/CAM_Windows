-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity combinar is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    result_V_V_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    result_V_V_full_n : IN STD_LOGIC;
    result_V_V_write : OUT STD_LOGIC;
    in1_V_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    in1_V_V_empty_n : IN STD_LOGIC;
    in1_V_V_read : OUT STD_LOGIC;
    in2_V_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    in2_V_V_empty_n : IN STD_LOGIC;
    in2_V_V_read : OUT STD_LOGIC;
    in1b_V_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    in1b_V_V_empty_n : IN STD_LOGIC;
    in1b_V_V_read : OUT STD_LOGIC;
    in2b_V_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    in2b_V_V_empty_n : IN STD_LOGIC;
    in2b_V_V_read : OUT STD_LOGIC );
end;


architecture behav of combinar is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal result_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal empty_n_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_284 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal empty_n_1_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_288 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal empty_n_2_reg_266 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_292 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal empty_n_3_reg_275 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal empty_n_fu_114_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op70_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_V_reg_252 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_n_1_fu_122_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_reg_261 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_n_2_fu_130_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_reg_270 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_n_3_fu_138_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_3_reg_279 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln879_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_2_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_2_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op51_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal ap_predicate_op62_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal end_4_0_i_fu_46 : STD_LOGIC_VECTOR (0 downto 0);
    signal end_3_0_i_fu_50 : STD_LOGIC_VECTOR (0 downto 0);
    signal end_2_0_i_fu_54 : STD_LOGIC_VECTOR (0 downto 0);
    signal end_1_0_i_fu_58 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_V_V_read_nbread_fu_62_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in2_V_V_read_nbread_fu_68_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1b_V_V_read_nbread_fu_74_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal in2b_V_V_read_nbread_fu_80_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_predicate_op61_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal and_ln115_1_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = and_ln115_2_reg_300) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    end_1_0_i_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_146_p2 = ap_const_lv1_1) and (empty_n_fu_114_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                end_1_0_i_fu_58 <= ap_const_lv1_1;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                end_1_0_i_fu_58 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    end_2_0_i_fu_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_1_fu_157_p2 = ap_const_lv1_1) and (empty_n_1_fu_122_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                end_2_0_i_fu_54 <= ap_const_lv1_1;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                end_2_0_i_fu_54 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    end_3_0_i_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_2_fu_168_p2 = ap_const_lv1_1) and (empty_n_2_fu_130_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                end_3_0_i_fu_50 <= ap_const_lv1_1;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                end_3_0_i_fu_50 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    end_4_0_i_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_3_fu_179_p2 = ap_const_lv1_1) and (empty_n_3_fu_138_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                end_4_0_i_fu_46 <= ap_const_lv1_1;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                end_4_0_i_fu_46 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln115_2_reg_300 <= and_ln115_2_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_n_1_reg_257 <= in2_V_V_read_nbread_fu_68_p2_0;
                empty_n_2_reg_266 <= in1b_V_V_read_nbread_fu_74_p2_0;
                empty_n_3_reg_275 <= in2b_V_V_read_nbread_fu_80_p2_0;
                empty_n_reg_248 <= in1_V_V_read_nbread_fu_62_p2_0;
                tmp_V_1_reg_261 <= in2_V_V_dout;
                tmp_V_2_reg_270 <= in1b_V_V_dout;
                tmp_V_3_reg_279 <= in2b_V_V_dout;
                tmp_V_reg_252 <= in1_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_1_fu_122_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_1_reg_288 <= icmp_ln879_1_fu_157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_2_fu_130_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_2_reg_292 <= icmp_ln879_2_fu_168_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_3_fu_138_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_3_reg_296 <= icmp_ln879_3_fu_179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_fu_114_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_reg_284 <= icmp_ln879_fu_146_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state7 => 
                if (((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    and_ln115_1_fu_208_p2 <= (end_4_0_i_fu_46 and end_3_0_i_fu_50);
    and_ln115_2_fu_214_p2 <= (and_ln115_fu_202_p2 and and_ln115_1_fu_208_p2);
    and_ln115_fu_202_p2 <= (end_2_0_i_fu_54 and end_1_0_i_fu_58);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op70_write_state6)
    begin
                ap_block_pp0_stage0_01001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op70_write_state6)
    begin
                ap_block_pp0_stage0_11001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op70_write_state6)
    begin
                ap_block_pp0_stage0_subdone <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op51_write_state3)
    begin
                ap_block_pp0_stage1_01001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op51_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op51_write_state3)
    begin
                ap_block_pp0_stage1_11001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op51_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op51_write_state3)
    begin
                ap_block_pp0_stage1_subdone <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op51_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op61_write_state4)
    begin
                ap_block_pp0_stage2_01001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op61_write_state4)
    begin
                ap_block_pp0_stage2_11001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op61_write_state4)
    begin
                ap_block_pp0_stage2_subdone <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op62_write_state5)
    begin
                ap_block_pp0_stage3_01001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op62_write_state5)
    begin
                ap_block_pp0_stage3_11001 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(result_V_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op62_write_state5)
    begin
                ap_block_pp0_stage3_subdone <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(result_V_V_full_n, ap_predicate_op51_write_state3)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op51_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage2_iter0_assign_proc : process(result_V_V_full_n, ap_predicate_op61_write_state4)
    begin
                ap_block_state4_pp0_stage2_iter0 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op61_write_state4 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage3_iter0_assign_proc : process(result_V_V_full_n, ap_predicate_op62_write_state5)
    begin
                ap_block_state5_pp0_stage3_iter0 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp0_stage0_iter1_assign_proc : process(result_V_V_full_n, ap_predicate_op70_write_state6)
    begin
                ap_block_state6_pp0_stage0_iter1 <= ((result_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state6 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, result_V_V_full_n, ap_CS_fsm_state7)
    begin
        if (((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op51_write_state3_assign_proc : process(empty_n_reg_248, icmp_ln879_reg_284)
    begin
                ap_predicate_op51_write_state3 <= ((icmp_ln879_reg_284 = ap_const_lv1_0) and (empty_n_reg_248 = ap_const_lv1_1));
    end process;


    ap_predicate_op61_write_state4_assign_proc : process(empty_n_1_reg_257, icmp_ln879_1_reg_288)
    begin
                ap_predicate_op61_write_state4 <= ((icmp_ln879_1_reg_288 = ap_const_lv1_0) and (empty_n_1_reg_257 = ap_const_lv1_1));
    end process;


    ap_predicate_op62_write_state5_assign_proc : process(empty_n_2_reg_266, icmp_ln879_2_reg_292)
    begin
                ap_predicate_op62_write_state5 <= ((icmp_ln879_2_reg_292 = ap_const_lv1_0) and (empty_n_2_reg_266 = ap_const_lv1_1));
    end process;


    ap_predicate_op70_write_state6_assign_proc : process(empty_n_3_reg_275, icmp_ln879_3_reg_296)
    begin
                ap_predicate_op70_write_state6 <= ((icmp_ln879_3_reg_296 = ap_const_lv1_0) and (empty_n_3_reg_275 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(result_V_V_full_n, ap_CS_fsm_state7)
    begin
        if (((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_n_1_fu_122_p1 <= in2_V_V_read_nbread_fu_68_p2_0;
    empty_n_2_fu_130_p1 <= in1b_V_V_read_nbread_fu_74_p2_0;
    empty_n_3_fu_138_p1 <= in2b_V_V_read_nbread_fu_80_p2_0;
    empty_n_fu_114_p1 <= in1_V_V_read_nbread_fu_62_p2_0;
    icmp_ln879_1_fu_157_p2 <= "1" when (in2_V_V_dout = ap_const_lv11_0) else "0";
    icmp_ln879_2_fu_168_p2 <= "1" when (in1b_V_V_dout = ap_const_lv11_0) else "0";
    icmp_ln879_3_fu_179_p2 <= "1" when (in2b_V_V_dout = ap_const_lv11_0) else "0";
    icmp_ln879_fu_146_p2 <= "1" when (in1_V_V_dout = ap_const_lv11_0) else "0";

    in1_V_V_read_assign_proc : process(in1_V_V_empty_n, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in1_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in1_V_V_read <= ap_const_logic_1;
        else 
            in1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in1_V_V_read_nbread_fu_62_p2_0 <= (0=>(in1_V_V_empty_n), others=>'-');

    in1b_V_V_read_assign_proc : process(in1b_V_V_empty_n, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in1b_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in1b_V_V_read <= ap_const_logic_1;
        else 
            in1b_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in1b_V_V_read_nbread_fu_74_p2_0 <= (0=>(in1b_V_V_empty_n), others=>'-');

    in2_V_V_read_assign_proc : process(in2_V_V_empty_n, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in2_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in2_V_V_read <= ap_const_logic_1;
        else 
            in2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in2_V_V_read_nbread_fu_68_p2_0 <= (0=>(in2_V_V_empty_n), others=>'-');

    in2b_V_V_read_assign_proc : process(in2b_V_V_empty_n, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in2b_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in2b_V_V_read <= ap_const_logic_1;
        else 
            in2b_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in2b_V_V_read_nbread_fu_80_p2_0 <= (0=>(in2b_V_V_empty_n), others=>'-');

    result_V_V_blk_n_assign_proc : process(result_V_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, empty_n_reg_248, icmp_ln879_reg_284, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, empty_n_1_reg_257, icmp_ln879_1_reg_288, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, empty_n_2_reg_266, icmp_ln879_2_reg_292, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, empty_n_3_reg_275, icmp_ln879_3_reg_296, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln879_2_reg_292 = ap_const_lv1_0) and (empty_n_2_reg_266 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln879_1_reg_288 = ap_const_lv1_0) and (empty_n_1_reg_257 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln879_reg_284 = ap_const_lv1_0) and (empty_n_reg_248 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln879_3_reg_296 = ap_const_lv1_0) and (empty_n_3_reg_275 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            result_V_V_blk_n <= result_V_V_full_n;
        else 
            result_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    result_V_V_din_assign_proc : process(result_V_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_predicate_op70_write_state6, tmp_V_reg_252, tmp_V_1_reg_261, tmp_V_2_reg_270, tmp_V_3_reg_279, ap_predicate_op51_write_state3, ap_predicate_op62_write_state5, ap_block_pp0_stage1_01001, ap_predicate_op61_write_state4, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001)
    begin
        if (((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            result_V_V_din <= ap_const_lv11_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op70_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            result_V_V_din <= tmp_V_3_reg_279;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_predicate_op62_write_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            result_V_V_din <= tmp_V_2_reg_270;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_predicate_op61_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            result_V_V_din <= tmp_V_1_reg_261;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op51_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            result_V_V_din <= tmp_V_reg_252;
        else 
            result_V_V_din <= "XXXXXXXXXXX";
        end if; 
    end process;


    result_V_V_write_assign_proc : process(result_V_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_predicate_op70_write_state6, ap_block_pp0_stage0_11001, ap_predicate_op51_write_state3, ap_block_pp0_stage1_11001, ap_predicate_op62_write_state5, ap_predicate_op61_write_state4, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op62_write_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_predicate_op61_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_predicate_op51_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((result_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op70_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            result_V_V_write <= ap_const_logic_1;
        else 
            result_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
