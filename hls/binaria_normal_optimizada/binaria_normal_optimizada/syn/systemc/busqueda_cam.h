// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _busqueda_cam_HH_
#define _busqueda_cam_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct busqueda_cam : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > tree_V_address0;
    sc_out< sc_logic > tree_V_ce0;
    sc_in< sc_lv<24> > tree_V_q0;
    sc_out< sc_lv<10> > tree_V_address1;
    sc_out< sc_logic > tree_V_ce1;
    sc_in< sc_lv<24> > tree_V_q1;
    sc_in< sc_lv<11> > nodo_V;
    sc_in< sc_lv<2> > relationship_V;
    sc_in< sc_logic > fatherSearch;
    sc_out< sc_lv<11> > result_V_V_din;
    sc_in< sc_logic > result_V_V_full_n;
    sc_out< sc_logic > result_V_V_write;


    // Module declarations
    busqueda_cam(sc_module_name name);
    SC_HAS_PROCESS(busqueda_cam);

    ~busqueda_cam();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > result_V_V_blk_n;
    sc_signal< sc_lv<1> > and_ln25_fu_241_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > or_ln36_reg_436;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<1> > or_ln37_reg_445;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > or_ln46_reg_399;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > or_ln47_reg_408;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > and_ln25_reg_373;
    sc_signal< sc_lv<11> > i1_0_reg_151;
    sc_signal< sc_lv<11> > i_0_reg_163;
    sc_signal< sc_lv<1> > fatherSearch_read_read_fu_84_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln36_1_fu_247_p2;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_377;
    sc_signal< sc_lv<1> > tmp_3_fu_253_p3;
    sc_signal< sc_lv<1> > tmp_3_reg_385;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > or_ln46_fu_286_p2;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<11> > tmp_V_1_reg_403;
    sc_signal< sc_lv<1> > or_ln47_fu_296_p2;
    sc_signal< sc_lv<11> > tmp_V_3_reg_412;
    sc_signal< sc_lv<11> > i_1_fu_301_p2;
    sc_signal< sc_lv<11> > i_1_reg_417;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_2_fu_307_p3;
    sc_signal< sc_lv<1> > tmp_2_reg_422;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > or_ln36_fu_340_p2;
    sc_signal< bool > ap_block_state8_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp1_stage1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<11> > grp_fu_175_p4;
    sc_signal< sc_lv<11> > tmp_V_reg_440;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > or_ln37_fu_350_p2;
    sc_signal< sc_lv<11> > grp_fu_185_p4;
    sc_signal< sc_lv<11> > tmp_V_2_reg_449;
    sc_signal< sc_lv<11> > i_fu_355_p2;
    sc_signal< sc_lv<11> > i_reg_454;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state7;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_i1_0_phi_fu_155_p4;
    sc_signal< sc_lv<11> > ap_phi_mux_i_0_phi_fu_167_p4;
    sc_signal< sc_lv<64> > zext_ln42_fu_265_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_276_p1;
    sc_signal< sc_lv<64> > zext_ln32_fu_319_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_330_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< bool > ap_block_state6;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage1_01001;
    sc_signal< sc_lv<1> > icmp_ln25_fu_235_p2;
    sc_signal< sc_lv<1> > and_ln25_fu_241_p1;
    sc_signal< sc_lv<10> > trunc_ln40_fu_261_p1;
    sc_signal< sc_lv<10> > or_ln43_fu_270_p2;
    sc_signal< sc_lv<1> > icmp_ln46_fu_281_p2;
    sc_signal< sc_lv<1> > icmp_ln47_fu_291_p2;
    sc_signal< sc_lv<10> > trunc_ln30_fu_315_p1;
    sc_signal< sc_lv<10> > or_ln33_fu_324_p2;
    sc_signal< sc_lv<11> > compare_node_min_V_fu_205_p4;
    sc_signal< sc_lv<1> > icmp_ln36_fu_335_p2;
    sc_signal< sc_lv<11> > compare_node_max_V_fu_225_p4;
    sc_signal< sc_lv<1> > icmp_ln37_fu_345_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<6> ap_ST_fsm_pp1_stage0;
    static const sc_lv<6> ap_ST_fsm_pp1_stage1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln25_fu_241_p1();
    void thread_and_ln25_fu_241_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_01001();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp1_stage1_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_pp1_stage1_iter0();
    void thread_ap_block_state9_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i1_0_phi_fu_155_p4();
    void thread_ap_phi_mux_i_0_phi_fu_167_p4();
    void thread_ap_ready();
    void thread_compare_node_max_V_fu_225_p4();
    void thread_compare_node_min_V_fu_205_p4();
    void thread_fatherSearch_read_read_fu_84_p2();
    void thread_grp_fu_175_p4();
    void thread_grp_fu_185_p4();
    void thread_i_1_fu_301_p2();
    void thread_i_fu_355_p2();
    void thread_icmp_ln25_fu_235_p2();
    void thread_icmp_ln36_1_fu_247_p2();
    void thread_icmp_ln36_fu_335_p2();
    void thread_icmp_ln37_fu_345_p2();
    void thread_icmp_ln46_fu_281_p2();
    void thread_icmp_ln47_fu_291_p2();
    void thread_or_ln33_fu_324_p2();
    void thread_or_ln36_fu_340_p2();
    void thread_or_ln37_fu_350_p2();
    void thread_or_ln43_fu_270_p2();
    void thread_or_ln46_fu_286_p2();
    void thread_or_ln47_fu_296_p2();
    void thread_result_V_V_blk_n();
    void thread_result_V_V_din();
    void thread_result_V_V_write();
    void thread_tmp_2_fu_307_p3();
    void thread_tmp_3_fu_253_p3();
    void thread_tree_V_address0();
    void thread_tree_V_address1();
    void thread_tree_V_ce0();
    void thread_tree_V_ce1();
    void thread_trunc_ln30_fu_315_p1();
    void thread_trunc_ln40_fu_261_p1();
    void thread_zext_ln32_fu_319_p1();
    void thread_zext_ln33_fu_330_p1();
    void thread_zext_ln42_fu_265_p1();
    void thread_zext_ln43_fu_276_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
