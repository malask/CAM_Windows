// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _busqueda_cam_HH_
#define _busqueda_cam_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct busqueda_cam : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > tree_V_address0;
    sc_out< sc_logic > tree_V_ce0;
    sc_in< sc_lv<24> > tree_V_q0;
    sc_in< sc_lv<11> > nodo_V;
    sc_in< sc_lv<2> > relationship_V;
    sc_in< sc_logic > fatherSearch;
    sc_out< sc_lv<11> > result_V_V_din;
    sc_in< sc_logic > result_V_V_full_n;
    sc_out< sc_logic > result_V_V_write;


    // Module declarations
    busqueda_cam(sc_module_name name);
    SC_HAS_PROCESS(busqueda_cam);

    ~busqueda_cam();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > result_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln18_reg_339;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln28_reg_308;
    sc_signal< sc_lv<1> > and_ln33_reg_327;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > fatherSearch_read_read_fu_88_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_172_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > i_1_fu_178_p2;
    sc_signal< sc_lv<11> > i_1_reg_312;
    sc_signal< sc_lv<1> > icmp_ln879_1_fu_203_p2;
    sc_signal< sc_lv<1> > icmp_ln879_1_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > and_ln33_fu_213_p2;
    sc_signal< sc_lv<11> > grp_fu_157_p4;
    sc_signal< sc_lv<11> > tmp_V_1_reg_331;
    sc_signal< sc_lv<1> > icmp_ln18_fu_238_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > i_fu_244_p2;
    sc_signal< sc_lv<11> > i_reg_343;
    sc_signal< sc_lv<24> > valor_V_reg_353;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<11> > i1_0_reg_135;
    sc_signal< bool > ap_predicate_op38_write_state4;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<1> > or_ln37_fu_233_p2;
    sc_signal< sc_lv<11> > i_0_reg_146;
    sc_signal< sc_lv<1> > and_ln23_fu_269_p2;
    sc_signal< sc_lv<64> > zext_ln30_fu_184_p1;
    sc_signal< sc_lv<64> > zext_ln20_fu_250_p1;
    sc_signal< sc_lv<1> > flag_0_fu_84;
    sc_signal< bool > ap_block_state8;
    sc_signal< sc_lv<11> > compare_node_V_1_fu_193_p4;
    sc_signal< sc_lv<2> > node_relation_V_1_fu_189_p1;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_208_p2;
    sc_signal< sc_lv<1> > xor_ln37_fu_227_p2;
    sc_signal< sc_lv<2> > node_relation_V_fu_255_p1;
    sc_signal< sc_lv<1> > icmp_ln879_fu_259_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_264_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln23_fu_269_p2();
    void thread_and_ln33_fu_213_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state4();
    void thread_ap_block_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op38_write_state4();
    void thread_ap_ready();
    void thread_compare_node_V_1_fu_193_p4();
    void thread_fatherSearch_read_read_fu_88_p2();
    void thread_grp_fu_157_p4();
    void thread_i_1_fu_178_p2();
    void thread_i_fu_244_p2();
    void thread_icmp_ln18_fu_238_p2();
    void thread_icmp_ln28_fu_172_p2();
    void thread_icmp_ln879_1_fu_203_p2();
    void thread_icmp_ln879_2_fu_264_p2();
    void thread_icmp_ln879_3_fu_208_p2();
    void thread_icmp_ln879_fu_259_p2();
    void thread_node_relation_V_1_fu_189_p1();
    void thread_node_relation_V_fu_255_p1();
    void thread_or_ln37_fu_233_p2();
    void thread_result_V_V_blk_n();
    void thread_result_V_V_din();
    void thread_result_V_V_write();
    void thread_tree_V_address0();
    void thread_tree_V_ce0();
    void thread_xor_ln37_fu_227_p2();
    void thread_zext_ln20_fu_250_p1();
    void thread_zext_ln30_fu_184_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
